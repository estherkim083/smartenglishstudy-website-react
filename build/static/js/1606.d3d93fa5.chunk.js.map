{"version":3,"file":"static/js/1606.d3d93fa5.chunk.js","mappings":"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","sources":["components/PapperBlock/papperStyle-jss.js","components/PapperBlock/PapperBlock.js","containers/Pages/ListeningTab/ListeningViewScripts.js","firebase.js"],"sourcesContent":["import { lighten } from '@material-ui/core/styles/colorManipulator';\nconst styles = theme => ({\n  root: theme.mixins.gutters({\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    boxShadow: theme.shade.light,\n    color: theme.palette.text.primary,\n    '&$noMargin': {\n      margin: 0\n    },\n    marginTop:\"160px\",\n  }),\n  descBlock: {\n    display: 'flex',\n    alignItems: 'center',\n    marginBottom: theme.spacing(5),\n    [theme.breakpoints.down('sm')]: {\n      marginBottom: theme.spacing(3),\n    }\n  },\n  titleText: {\n    flex: 1,\n  },\n  title: {\n    position: 'relative',\n    textTransform: 'capitalize',\n    fontSize: 24,\n    fontWeight: 400,\n    color: theme.palette.type === 'dark' ? theme.palette.primary.main : theme.palette.primary.dark,\n    [theme.breakpoints.down('xs')]: {\n      textAlign: 'center',\n      fontWeight: 600,\n      marginBottom: theme.spacing(1)\n    },    \n    fontFamily: 'CookieRun-Regular'\n  },\n  description: {\n    maxWidth: 960,\n    paddingTop: theme.spacing(0.5),\n    [theme.breakpoints.down('xs')]: {\n      textAlign: 'center'\n    },    \n    fontFamily: 'CookieRun-Regular'\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1),\n    borderRadius: theme.rounded.medium,\n    backgroundColor: theme.palette.background.default,\n    [theme.breakpoints.up('lg')]: {\n      padding: theme.spacing(2)\n    }\n  },\n  whiteBg: {\n    backgroundColor: 'transparent',\n    margin: 0,\n    padding: 0,\n  },\n  noMargin: {},\n  colorMode: {\n    backgroundColor: theme.palette.type === 'dark' ? theme.palette.primary.dark : theme.palette.primary.main,\n    '& $title': {\n      color: theme.palette.grey[100],\n      '&:after': {\n        borderBottom: `5px solid ${theme.palette.primary.light}`\n      }\n    },\n    '& $description': {\n      color: theme.palette.grey[100],\n    }\n  },\n  overflowX: {\n    width: '100%',\n    overflowX: 'auto',\n  },\n  iconTitle: {\n    borderRadius: theme.rounded.small,\n    border: theme.palette.type === 'dark' ? 'none' : `1px solid ${lighten(theme.palette.primary.dark, 0.9)}`,\n    boxShadow: `0 2px 15px -5px ${theme.palette.primary.main}`,\n    background: theme.palette.type === 'dark' ? theme.palette.primary.main : lighten(theme.palette.primary.light, 0.5),\n    width: 48,\n    height: 48,\n    textAlign: 'center',\n    lineHeight: '44px',\n    verticalAlign: 'middle',\n    marginRight: theme.spacing(3),\n    [theme.breakpoints.down('xs')]: {\n      display: 'none'\n    },\n    '& i': {\n      fontSize: 28,\n      verticalAlign: 'baseline',\n      color: theme.palette.type === 'dark' ? theme.palette.common.white : theme.palette.primary.main\n    }\n  }\n});\n\nexport default styles;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport styles from './papperStyle-jss';\n\n\nfunction PapperBlock(props) {\n  \n  const {\n    classes,\n    title,\n    desc,\n    children,\n    whiteBg,\n    noMargin,\n    colorMode,\n    overflowX,\n    icon\n  } = props;\n  return (\n    <div>\n      <Paper className={classNames(classes.root, noMargin && classes.noMargin, colorMode && classes.colorMode)} elevation={0}>\n        <div className={classes.descBlock}>\n          <span className={classes.iconTitle}>\n            <i className={icon} />\n          </span>\n          <div className={classes.titleText}>\n            <Typography variant=\"h6\" component=\"h2\" className={classes.title}>\n              {title}\n            </Typography>\n            <Typography component=\"p\" className={classes.description}>\n              {desc}\n            </Typography>\n          </div>\n        </div>\n        \n        <section className={classNames(classes.content, whiteBg && classes.whiteBg, overflowX && classes.overflowX)}>\n          {children}\n        </section>\n      </Paper>\n    </div>\n  );\n}\n\nPapperBlock.propTypes = {\n  classes: PropTypes.object.isRequired,\n  title: PropTypes.string.isRequired,\n  desc: PropTypes.string.isRequired,\n  icon: PropTypes.string,\n  children: PropTypes.node.isRequired,\n  whiteBg: PropTypes.bool,\n  colorMode: PropTypes.bool,\n  noMargin: PropTypes.bool,\n  overflowX: PropTypes.bool,\n};\n\nPapperBlock.defaultProps = {\n  whiteBg: false,\n  noMargin: false,\n  colorMode: false,\n  overflowX: false,\n  icon: 'ion-ios-bookmark-outline'\n};\n\nexport default withStyles(styles)(PapperBlock);\n","import React, {useEffect, useState} from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\nimport PapperBlock from '../../../components/PapperBlock/PapperBlock';\r\nimport axios from 'axios';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { storage } from '../../../firebase';\r\nimport { ref, getDownloadURL } from \"firebase/storage\";\r\n\r\n\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    fontFamily: \"CookieRun-Regular\",\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1),\r\n    marginTop: \"20px\"\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  title: {\r\n    fontFamily: \"CookieRun-Regular\",\r\n    margin: \"20px\"\r\n  },\r\n  description : {\r\n    fontFamily: \"CookieRun-Regular\",\r\n    margin: \"20px\"\r\n  },\r\n  \r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  dialogtitle: {\r\n    fontFamily: \"CookieRun-Regular\",\r\n    color: theme.palette.secondary.dark,\r\n  },\r\n  changeFontFamilyClasses: {\r\n    fontFamily: \"CookieRun-Regular\",\r\n  }\r\n}));\r\n\r\nfunction getSteps() {\r\n  return ['전체스크립트', '빈칸뚫기 수행하기', '빈칸 뚫기 연습하기', '채점/검토하기'];\r\n}\r\n\r\nfunction ListeningMenu(props) {\r\n    let { id } = useParams();\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [ authorName, setAuthorName] = useState(null);\r\n    const [ scriptFileName, setScriptFileName] = useState(null);\r\n    const [ scriptText, setScriptText] = useState(null);\r\n    const [ scriptTitle, setScriptTitle] = useState(null);\r\n    const [ scriptBlankText, setScriptBlankText] = useState([]);\r\n    const [ blankTextValue, setBlankTextValue] = useState({});\r\n    const [ gradeList, setGradeList ]= useState(null);\r\n    const [ blankWords, setBlankWords ] = useState(null);\r\n    const [ URLVal, setURLVal ]= useState(null);\r\n    const baseURL = process.env.REACT_APP_BASE_BACKEND_URL;\r\n\r\n    const classes = useStyles();\r\n    const [activeStep, setActiveStep] = React.useState(0);\r\n    const steps = getSteps();\r\n    const isStepOptional = (step) => step === 2;\r\n    \r\n    const [dataState, setDataState] = useState({\r\n        open: false,\r\n        X: '',\r\n        Y: '',\r\n    });\r\n\r\n    const handleClickOpen = () => {\r\n        setDataState({\r\n        ...dataState,\r\n        open: true\r\n        });\r\n    };\r\n    const handleChangeX = X => event => {\r\n        setDataState({\r\n            ...dataState,\r\n            [X]: Number(event.target.value)\r\n        });\r\n    };\r\n    \r\n    const handleChangeY = Y => event => {\r\n        setDataState({\r\n            ...dataState,\r\n            [Y]: Number(event.target.value)\r\n        });\r\n    };\r\n        \r\n    const handleClose = () => {\r\n        setDataState({\r\n            ...dataState,\r\n            open: false\r\n        });\r\n    };\r\n\r\n    \r\n  \r\n    const handleNext = (activeStep) => {\r\n      var divaudio= document.getElementById(\"listeningmp3audio\");\r\n      var audio= document.getElementsByTagName(\"audio\");\r\n      for(var i=0; i<audio.length; i++) {\r\n        divaudio.removeChild(audio[i]);\r\n      }\r\n      if(activeStep===1) {\r\n        console.log(\"step 1\");\r\n        const audio= document.createElement('audio');\r\n        audio.controls = 'controls';\r\n        audio.src      = URLVal;\r\n        audio.type     = 'audio/mpeg';\r\n        document.getElementById('listeningmp3audio').appendChild(audio);\r\n\r\n      }\r\n      setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    };\r\n    \r\n    // 나가기 버튼 눌렀을 때, 다시 리스닝 게시판 화면으로 돌아가기.\r\n    const handleReset = () => {\r\n        window.location.href= \"/listening\";\r\n    };\r\n\r\n    const handleblankTextValue = (e) => {\r\n        let oldVal =blankTextValue;\r\n        oldVal[e.target.id] = e.target.value;\r\n        setBlankTextValue(oldVal);\r\n        console.log(oldVal);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setIsLoaded(true);\r\n    });\r\n\r\n    useEffect(() => {\r\n        console.log(id);\r\n        if(isLoaded) {\r\n            // 화면에서 필요한 여러 리스닝 데이터들 불러오기.\r\n            axios\r\n                .get(baseURL+\"listening/listening-view-scripts/\", {\r\n                    headers: {\r\n                    Authorization: localStorage.getItem('token')\r\n                        ? 'Token ' + localStorage.getItem('token')\r\n                        : null,\r\n                    'Content-Type': 'application/json',\r\n                    accept: 'application/json',\r\n                    },\r\n                    params: {\r\n                    id: id\r\n                    }\r\n                })\r\n                .then(res=> {\r\n                    console.log(res[\"data\"]);\r\n                    // 리스닝 mp3 파일 데이터 배열로 만들기, id 키 없애고 value 만 배열에 넣기.\r\n                    var script_file_names= res[\"data\"][\"script_file_name\"];\r\n                    var count = Object.keys(script_file_names).length;\r\n                    var keys = Object.keys(script_file_names);\r\n                    var tmp_script_file= [];\r\n                    for(var i=0; i<count; i++) {\r\n                        tmp_script_file.push(script_file_names[keys[i]]);\r\n                    }\r\n                    // 데이터 값들 대입하기.\r\n                    setAuthorName(res[\"data\"][\"author_name\"]);\r\n                    setScriptFileName(tmp_script_file);\r\n                    setScriptText(res[\"data\"][\"script_text\"]);\r\n                    setScriptTitle(res[\"data\"][\"title\"]);\r\n\r\n                    //firestorage 에서 리스닝 mp3 파일 가져오기\r\n                    if(tmp_script_file) {\r\n                        var count= Object.values(tmp_script_file).length;\r\n                        console.log(count);\r\n                        for(var i=0; i<count;i++) {\r\n                            getDownloadURL(ref(storage, `posts/${tmp_script_file[i]}`))\r\n                            .then((url) => {\r\n                                setURLVal(url);\r\n                                const audio= document.createElement('audio');\r\n                                audio.controls = 'controls';\r\n                                audio.src      = url;\r\n                                audio.type     = 'audio/mpeg';\r\n                                document.getElementById('listeningmp3audio').appendChild(audio);\r\n                            })\r\n                            .catch((error) => {\r\n                            });\r\n                        }\r\n                    }\r\n                    //firestorage 에서 리스닝 mp3 파일 가져오기 끝\r\n\r\n                })\r\n        }\r\n    }, [isLoaded]);    \r\n\r\n    const handleSubmitStepTwo= () => {\r\n        handleClose();\r\n        axios\r\n          .get(baseURL+\"listening/listening-blank-create/\", {\r\n            headers: {\r\n              Authorization: localStorage.getItem('token')\r\n                ? 'Token ' + localStorage.getItem('token')\r\n                : null,\r\n              'Content-Type': 'application/json',\r\n              accept: 'application/json',\r\n            },\r\n            params: {\r\n                id: id,\r\n                x: dataState.X,\r\n                y: dataState.Y,\r\n\r\n            }\r\n          })\r\n          .then(res => {\r\n            const txt= res[\"data\"][\"blank_script_text\"];\r\n            let searchvalue = '_______';\r\n            const str_txt= txt.split(searchvalue);\r\n            setScriptBlankText(str_txt);\r\n          })\r\n          .catch(error => {});\r\n    };\r\n    const handleScore= () => {\r\n        console.log(\"채점하기 버튼 누름 step 2 에서.\")\r\n        // 'listening-blank-grade'\r\n        axios\r\n          .get(baseURL+\"listening/listening-blank-grade/\", {\r\n            headers: {\r\n              Authorization: localStorage.getItem('token')\r\n                ? 'Token ' + localStorage.getItem('token')\r\n                : null,\r\n              'Content-Type': 'application/json',\r\n              accept: 'application/json',\r\n            },\r\n            params: {\r\n                id: id,\r\n                blank_text_value: blankTextValue\r\n\r\n            }\r\n          })\r\n          .then(res => {\r\n            setBlankWords(res[\"data\"][\"blank_words\"]);\r\n            setGradeList(res[\"data\"][\"grade_list\"]);\r\n          })\r\n          .catch(error => {});\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    };\r\n    const getStepContent= (step) => {\r\n        switch (step) {\r\n            case 0:\r\n                return <div className=\"row preview\">\r\n                            <div id=\"listeningmp3audio\"></div>\r\n                            <Typography variant=\"h6\" component=\"h2\" className={classes.title}>\r\n                            <hr/> 제목 : {scriptTitle} <hr/>\r\n                            </Typography>\r\n                            <Typography variant=\"h6\" component=\"h2\" className={classes.description}>\r\n                                글쓴이 : {authorName} <hr/><br/> 전체 스크립트 본문 : \r\n                            </Typography>\r\n                            <Typography component=\"p\" className={classes.description}>\r\n                                {scriptText} <br/><br/><br/>\r\n                            </Typography>\r\n                        </div>;\r\n            case 1:\r\n                return <div>\r\n                            <div>\r\n                                <Button variant=\"contained\" color=\"secondary\" style={{marginTop: \"20px\", borderRadius: \"0\", width: \"50%\"}} onClick={handleClickOpen}>빈칸 정도 선택하기</Button>\r\n                                <Dialog\r\n                                disableBackdropClick\r\n                                disableEscapeKeyDown\r\n                                open={dataState.open}\r\n                                onClose={handleClose}\r\n                                >\r\n                                <DialogTitle disableTypography=\"true\" className={classes.dialogtitle}>빈칸 뚫기 정도를 선택하시오 (X줄당 Y개 빈칸뚫기). </DialogTitle>\r\n                                <DialogContent>\r\n                                    <form className={classes.container}>\r\n                                    <FormControl className={classes.formControl}>\r\n                                        <InputLabel className={classes.changeFontFamilyClasses}>X</InputLabel>\r\n                                        <Select\r\n                                        native\r\n                                        value={dataState.age}\r\n                                        onChange={handleChangeX('X')}\r\n                                        input={<Input className={classes.changeFontFamilyClasses}/>}\r\n                                        >\r\n                                        <option value=\"\" />\r\n                                        <option value={2} className={classes.changeFontFamilyClasses}>두문장</option>\r\n                                        <option value={5} className={classes.changeFontFamilyClasses}>다섯문장</option>\r\n                                        <option value={10} className={classes.changeFontFamilyClasses}>열문장</option>\r\n                                        <option value={20} className={classes.changeFontFamilyClasses}>이십문장</option>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    <FormControl className={classes.formControl}>\r\n                                        <InputLabel className={classes.changeFontFamilyClasses}>Y</InputLabel>\r\n                                        <Select\r\n                                        value={dataState.age}\r\n                                        onChange={handleChangeY('Y')}\r\n                                        input={<Input className={classes.changeFontFamilyClasses}/>}\r\n                                        >\r\n                                        <MenuItem value={1} className={classes.changeFontFamilyClasses}>1개</MenuItem>\r\n                                        <MenuItem value={2} className={classes.changeFontFamilyClasses}>2개</MenuItem>\r\n                                        <MenuItem value={5} className={classes.changeFontFamilyClasses}>5개</MenuItem>\r\n                                        <MenuItem value={10} className={classes.changeFontFamilyClasses}>10개</MenuItem>\r\n                                        <MenuItem value={15} className={classes.changeFontFamilyClasses}>15개</MenuItem>\r\n                                        <MenuItem value={20} className={classes.changeFontFamilyClasses}>20개</MenuItem>\r\n                                        <MenuItem value={30} className={classes.changeFontFamilyClasses}>30개</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    </form>\r\n                                </DialogContent>\r\n                                <DialogActions>\r\n                                    <Button onClick={handleClose} color=\"primary\">\r\n                                    Cancel\r\n                                    </Button>\r\n                                    <Button onClick={handleSubmitStepTwo} color=\"primary\">\r\n                                    Ok\r\n                                    </Button>\r\n                                </DialogActions>\r\n                                </Dialog>\r\n                            </div>\r\n                        </div>\r\n            case 2:\r\n                return <div style= {{margin:\"10px\"}}>\r\n                    <div style={{fontFamily:\"CookieRun-Regular\"}}>빈칸 뚫기 위한 시간이 걸립니다. 조금만 기다려주시기 바랍니다.</div><br/>\r\n                    <div style={{fontFamily:\"CookieRun-Regular\"}}>최소한 한문장당 빈칸 1개가 생성됩니다.</div><br/>\r\n                    {scriptBlankText && \r\n                            scriptBlankText.map((item, index)=>{\r\n                                if (index!= scriptBlankText.length-1) {\r\n                                    return <><span style={{position: 'relative', margin:\"10px\", display:'inline-block'}}>{item}</span> <TextField \r\n                                            id= {index}\r\n                                            style={{height: \"35px\", width: \"100px\",}}\r\n                                            onChange={handleblankTextValue}\r\n                                            >\r\n                                        </TextField> </>\r\n                                }\r\n                                else {\r\n                                    return <>{item}</>\r\n                                }\r\n                            })\r\n                    }\r\n                </div>;\r\n            case 3:\r\n                return <div style= {{margin:\"10px\"}}>\r\n                    {console.log(blankWords)}\r\n                    {scriptBlankText && \r\n                            scriptBlankText.map((item, index)=>{\r\n                                if (index!= scriptBlankText.length-1) {\r\n                                    {console.log(blankTextValue[index])}\r\n                                    if (gradeList && gradeList[index] == 0 && blankWords[index]!== undefined) {\r\n                                        return <><span style={{position: 'relative', margin:\"10px\", display:'inline-block'}}>{item}</span> <TextField \r\n                                                id= {index}\r\n                                                style={{height: \"80%\", width: \"100px\"}}\r\n                                                onChange={handleblankTextValue}\r\n                                                placeholder= {blankTextValue[index]}\r\n                                                helperText={blankWords[index]}\r\n                                                InputLabelProps={{\r\n                                                    style: { color: '#fff', fontStyle: \"bold\" }, \r\n                                                 }}\r\n                                                 InputProps={{\r\n                                                    style: {backgroundColor: \"rgba(255,105,97, 0.9)\"}\r\n                                                 }}\r\n                                                 FormHelperTextProps={{\r\n                                                    style: { marginTop: '0px', fontFamily: \"CookieRun-Regular\", fontSize: '13px'}\r\n                                                 }}\r\n                                                >\r\n                                            </TextField> </>\r\n\r\n                                    }\r\n                                    else if (gradeList && gradeList[index] == 1 && blankWords[index]!== undefined) {\r\n                                        return <><span style={{position: 'relative', margin:\"10px\", display:'inline-block'}}>{item}</span> <TextField \r\n                                                id= {index}\r\n                                                style={{height: \"100%\", width: \"100px\"}}\r\n                                                onChange={handleblankTextValue}\r\n                                                placeholder= {blankTextValue[index]}\r\n                                                helperText={blankWords[index]}\r\n                                                InputLabelProps={{\r\n                                                    style: { color: '#fff', fontStyle: \"bold\"}, \r\n                                                 }}\r\n                                                 InputProps={{\r\n                                                    style: {backgroundColor: \"rgba(119,221,119, 0.9)\"}\r\n                                                 }}\r\n                                                 FormHelperTextProps={{\r\n                                                    style: { marginTop: '0px', fontFamily: \"CookieRun-Regular\", fontSize: '13px'}\r\n                                                 }}\r\n                                                >\r\n                                            </TextField> </>\r\n\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    return <>{item}</>\r\n                                }\r\n                            })\r\n                    }\r\n                </div>;\r\n            default:\r\n                return 'Unknown step';\r\n      }\r\n    }\r\n\r\n    return (\r\n    <div>\r\n        <PapperBlock title=\"Listening 빈칸뚫기 연습\" whiteBg icon=\"ion-ios-grid-outline\" desc=\"\r\n        리스닝 빈칸뚫기 연습창입니다. 빈칸 뚫기 연습과 비교를 통해서 듣기 실력을 향상시켜 보세요.\">\r\n            <div className={classes.root}>\r\n            <Stepper activeStep={activeStep}>\r\n                {steps.map((label, index) => {\r\n                return (\r\n                    <Step key={label}>\r\n                    <StepLabel>{label}</StepLabel>\r\n                    </Step>\r\n                );\r\n                })}\r\n            </Stepper>\r\n            <div>\r\n                {activeStep === steps.length ? (\r\n                <div>\r\n                    <Typography className={classes.title} variant=\"h6\" component=\"h2\">\r\n                        모두 끝났습니다. \r\n                    </Typography>\r\n                    <Button onClick={handleReset} className={classes.button}>\r\n                    나가기\r\n                    </Button>\r\n                </div>\r\n                ) : (\r\n                <div>{activeStep ===0 ? <div></div> :\r\n                                    <div id=\"listeningmp3audio\"></div>\r\n                    }\r\n                    \r\n                    <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\r\n                    <div>{isStepOptional(activeStep) ? \r\n                            <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={handleScore}\r\n                            className={classes.button}\r\n                                >채점하기\r\n                            </Button>\r\n                            :<Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => handleNext(activeStep)}\r\n                            className={classes.button}\r\n                                >\r\n                                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n                            </Button>\r\n                        \r\n                        }\r\n                        \r\n                    </div>\r\n                </div>\r\n                )}\r\n            </div>\r\n            </div>\r\n        </PapperBlock>\r\n    </div>\r\n  );\r\n} \r\n\r\nexport default ListeningMenu;","// Import the functions you need from the SDKs you need\r\nimport { initializeApp, getApps, getApp } from \"firebase/app\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\nimport { getStorage } from 'firebase/storage';\r\nimport { getFirestore } from \"firebase/firestore\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDXlEPMQYhq7o6x21RwfPBQh3sHxo0p4dI\",\r\n  authDomain: \"english-website-362600.firebaseapp.com\",\r\n  projectId: \"english-website-362600\",\r\n  storageBucket: \"english-website-362600.appspot.com\",\r\n  messagingSenderId: \"790842426643\",\r\n  appId: \"1:790842426643:web:f45d23c026b573e55686e6\",\r\n  measurementId: \"G-LX8PL19HD7\"\r\n};\r\n\r\n// Initialize Firebase\r\n// const app = initializeApp(firebaseConfig);\r\n// const analytics = getAnalytics(app);\r\n\r\nconst app = !getApps().length ? initializeApp(firebaseConfig): getApp();\r\nconst analytics = getAnalytics(app);\r\nconst db= getFirestore();\r\nconst storage = getStorage();\r\nexport {app, db, storage};"],"names":["theme","root","mixins","gutters","paddingTop","spacing","paddingBottom","marginBottom","boxShadow","shade","light","color","palette","text","primary","margin","marginTop","descBlock","display","alignItems","breakpoints","down","titleText","flex","title","position","textTransform","fontSize","fontWeight","type","main","dark","textAlign","description","maxWidth","content","padding","borderRadius","rounded","medium","backgroundColor","background","default","up","whiteBg","noMargin","colorMode","grey","borderBottom","overflowX","width","iconTitle","small","border","lighten","height","lineHeight","verticalAlign","marginRight","common","white","PapperBlock","props","classes","desc","children","icon","Paper","className","classNames","elevation","Typography","variant","component","defaultProps","withStyles","styles","useStyles","makeStyles","fontFamily","button","instructions","container","flexWrap","formControl","minWidth","dialogtitle","secondary","changeFontFamilyClasses","id","useParams","useState","isLoaded","setIsLoaded","authorName","setAuthorName","setScriptFileName","scriptText","setScriptText","scriptTitle","setScriptTitle","scriptBlankText","setScriptBlankText","blankTextValue","setBlankTextValue","gradeList","setGradeList","blankWords","setBlankWords","URLVal","setURLVal","baseURL","process","React","activeStep","setActiveStep","steps","open","X","Y","dataState","setDataState","handleClickOpen","handleClose","handleblankTextValue","e","oldVal","target","value","console","log","useEffect","axios","headers","Authorization","localStorage","getItem","accept","params","then","res","script_file_names","count","Object","keys","length","tmp_script_file","i","push","values","getDownloadURL","ref","storage","url","audio","document","createElement","controls","src","getElementById","appendChild","catch","error","step","handleSubmitStepTwo","x","y","str_txt","split","map","label","index","onClick","window","location","href","style","disableBackdropClick","disableEscapeKeyDown","onClose","disableTypography","native","age","onChange","event","Number","input","item","undefined","placeholder","helperText","InputLabelProps","fontStyle","InputProps","FormHelperTextProps","getStepContent","blank_text_value","prevActiveStep","divaudio","getElementsByTagName","removeChild","handleNext","app","getApps","getApp","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getAnalytics","getFirestore","getStorage"],"sourceRoot":""}