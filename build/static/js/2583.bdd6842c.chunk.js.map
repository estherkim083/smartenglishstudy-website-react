{"version":3,"file":"static/js/2583.bdd6842c.chunk.js","mappings":"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","sources":["components/PapperBlock/papperStyle-jss.js","components/PapperBlock/PapperBlock.js","containers/Pages/Vocab/VocabQuizResult.js","useWindowDimensions.js"],"sourcesContent":["import { lighten } from '@material-ui/core/styles/colorManipulator';\nconst styles = theme => ({\n  root: theme.mixins.gutters({\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    boxShadow: theme.shade.light,\n    color: theme.palette.text.primary,\n    '&$noMargin': {\n      margin: 0\n    },\n    marginTop:\"160px\",\n  }),\n  descBlock: {\n    display: 'flex',\n    alignItems: 'center',\n    marginBottom: theme.spacing(5),\n    [theme.breakpoints.down('sm')]: {\n      marginBottom: theme.spacing(3),\n    }\n  },\n  titleText: {\n    flex: 1,\n  },\n  title: {\n    position: 'relative',\n    textTransform: 'capitalize',\n    fontSize: 24,\n    fontWeight: 400,\n    color: theme.palette.type === 'dark' ? theme.palette.primary.main : theme.palette.primary.dark,\n    [theme.breakpoints.down('xs')]: {\n      textAlign: 'center',\n      fontWeight: 600,\n      marginBottom: theme.spacing(1)\n    },    \n    fontFamily: 'CookieRun-Regular'\n  },\n  description: {\n    maxWidth: 960,\n    paddingTop: theme.spacing(0.5),\n    [theme.breakpoints.down('xs')]: {\n      textAlign: 'center'\n    },    \n    fontFamily: 'CookieRun-Regular'\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1),\n    borderRadius: theme.rounded.medium,\n    backgroundColor: theme.palette.background.default,\n    [theme.breakpoints.up('lg')]: {\n      padding: theme.spacing(2)\n    }\n  },\n  whiteBg: {\n    backgroundColor: 'transparent',\n    margin: 0,\n    padding: 0,\n  },\n  noMargin: {},\n  colorMode: {\n    backgroundColor: theme.palette.type === 'dark' ? theme.palette.primary.dark : theme.palette.primary.main,\n    '& $title': {\n      color: theme.palette.grey[100],\n      '&:after': {\n        borderBottom: `5px solid ${theme.palette.primary.light}`\n      }\n    },\n    '& $description': {\n      color: theme.palette.grey[100],\n    }\n  },\n  overflowX: {\n    width: '100%',\n    overflowX: 'auto',\n  },\n  iconTitle: {\n    borderRadius: theme.rounded.small,\n    border: theme.palette.type === 'dark' ? 'none' : `1px solid ${lighten(theme.palette.primary.dark, 0.9)}`,\n    boxShadow: `0 2px 15px -5px ${theme.palette.primary.main}`,\n    background: theme.palette.type === 'dark' ? theme.palette.primary.main : lighten(theme.palette.primary.light, 0.5),\n    width: 48,\n    height: 48,\n    textAlign: 'center',\n    lineHeight: '44px',\n    verticalAlign: 'middle',\n    marginRight: theme.spacing(3),\n    [theme.breakpoints.down('xs')]: {\n      display: 'none'\n    },\n    '& i': {\n      fontSize: 28,\n      verticalAlign: 'baseline',\n      color: theme.palette.type === 'dark' ? theme.palette.common.white : theme.palette.primary.main\n    }\n  }\n});\n\nexport default styles;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport styles from './papperStyle-jss';\n\n\nfunction PapperBlock(props) {\n  \n  const {\n    classes,\n    title,\n    desc,\n    children,\n    whiteBg,\n    noMargin,\n    colorMode,\n    overflowX,\n    icon\n  } = props;\n  return (\n    <div>\n      <Paper className={classNames(classes.root, noMargin && classes.noMargin, colorMode && classes.colorMode)} elevation={0}>\n        <div className={classes.descBlock}>\n          <span className={classes.iconTitle}>\n            <i className={icon} />\n          </span>\n          <div className={classes.titleText}>\n            <Typography variant=\"h6\" component=\"h2\" className={classes.title}>\n              {title}\n            </Typography>\n            <Typography component=\"p\" className={classes.description}>\n              {desc}\n            </Typography>\n          </div>\n        </div>\n        \n        <section className={classNames(classes.content, whiteBg && classes.whiteBg, overflowX && classes.overflowX)}>\n          {children}\n        </section>\n      </Paper>\n    </div>\n  );\n}\n\nPapperBlock.propTypes = {\n  classes: PropTypes.object.isRequired,\n  title: PropTypes.string.isRequired,\n  desc: PropTypes.string.isRequired,\n  icon: PropTypes.string,\n  children: PropTypes.node.isRequired,\n  whiteBg: PropTypes.bool,\n  colorMode: PropTypes.bool,\n  noMargin: PropTypes.bool,\n  overflowX: PropTypes.bool,\n};\n\nPapperBlock.defaultProps = {\n  whiteBg: false,\n  noMargin: false,\n  colorMode: false,\n  overflowX: false,\n  icon: 'ion-ios-bookmark-outline'\n};\n\nexport default withStyles(styles)(PapperBlock);\n","import React, {useEffect , useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PapperBlock from '../../../components/PapperBlock/PapperBlock';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport useWindowDimensions from '../../../useWindowDimensions';\r\nimport axios from 'axios';\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: \"15px\"\r\n    },      \r\n    button : {\r\n        margin: \"10px\",\r\n        backgroundColor: theme.palette.type === 'dark' ? theme.palette.primary.dark : theme.palette.primary.main, \r\n        color: theme.palette.type === 'dark' ? theme.palette.common.white : theme.palette.common.white,\r\n        width:\"50%\",\r\n        fontFamily: 'CookieRun-Regular',\r\n        fontSize: '15px',\r\n        marginTop: \"30px\",\r\n        '&:hover': {\r\n        backgroundColor: theme.palette.type === 'dark' ? theme.palette.primary.main : theme.palette.primary.dark, \r\n        },\r\n    },\r\n}));\r\n\r\nfunction SolveRoom(props) {\r\n\r\n    const classes = useStyles();\r\n    const [datas, setDatas] = useState({});\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const { height, width } = useWindowDimensions();\r\n    const baseURL = process.env.REACT_APP_BASE_BACKEND_URL;\r\n    let { id } = useParams();\r\n    useEffect(() => {\r\n        var author= localStorage.getItem(\"user_name\");\r\n        if(author === null) {\r\n            window.location.href=\"/auth/email\";\r\n        }\r\n        if(localStorage.getItem(\"MyProfileOnce\")) {\r\n            localStorage.removeItem(\"MyProfileOnce\");\r\n        }\r\n        if(localStorage.getItem(\"ChatMessageOnce\")) {\r\n          localStorage.removeItem(\"ChatMessageOnce\");\r\n        } \r\n        setIsLoaded(true);\r\n    });\r\n    useEffect(() => {\r\n        if(isLoaded) {       \r\n            axios\r\n                .get(baseURL+\"vocab/vocab-quiz-result/\", {\r\n                    headers: {\r\n                    Authorization: localStorage.getItem('token')\r\n                        ? 'Token ' + localStorage.getItem('token')\r\n                        : null,\r\n                    'Content-Type': 'application/json',\r\n                    accept: 'application/json',\r\n                    }\r\n                })\r\n                .then(res => {\r\n                    console.log(res[\"data\"]);\r\n                    setDatas(res[\"data\"]);\r\n                })\r\n                .catch(error => {});         \r\n        }\r\n    },[isLoaded]);\r\n    return (\r\n        <div className={classes.root}>\r\n            <PapperBlock title=\"어휘퀴즈 문제풀이방\" whiteBg icon=\"ion-ios-grid-outline\" desc=\"\r\n            퀴즈 문제 풀이방에서 어휘 암기문제를 풀어보세요.\">\r\n                \r\n                <Grid\r\n                    container\r\n                    alignItems=\"flex\"\r\n                    justify=\"center\"\r\n                    direction=\"column\"\r\n                    spacing={3}\r\n                    >{datas!= {} && \r\n                    Object.entries(datas).map( ([key, value], index) => {\r\n                        return <Grid item md={12}>\r\n                                <Typography component=\"h1\" style={{fontFamily:'CookieRun-Regular', fontSize: \"16px\", marginTop: \"20px\"}}>{index+1} 번.</Typography>\r\n                                {value[\"label\"]== \"type1\" && \r\n                                    <><Typography component=\"h1\" style={{fontFamily:'CookieRun-Regular', fontSize: \"16px\", marginTop: \"20px\"}}>영어단어가 주어지면, 영어로 해석 풀이 적는 문제입니다.</Typography>\r\n                                    <Typography component=\"h1\" style={{fontFamily:'CookieRun-Regular', fontSize: \"16px\", marginTop: \"20px\"}}>{value[\"영단어\"]}</Typography>\r\n\r\n                                    {value[\"iscorrect\"]==true && \r\n                                        <><TextField \r\n                                            style={{height: \"35px\", width: \"70%\", marginLeft: '10px', marginTop: '20px'}}\r\n                                            InputLabelProps={{\r\n                                                style: { color: '#fff', fontStyle: \"bold\" , fontFmaily: 'CookieRun-Regular'}, \r\n                                            }}\r\n                                            inputProps={{\r\n                                                style: {\r\n                                                    fontFamily: 'CookieRun-Regular',\r\n                                                },\r\n                                            }}\r\n                                            InputProps={{\r\n                                               style: {backgroundColor: \"rgba(119,221,119, 0.9)\"}\r\n                                            }}\r\n                                            value={value[\"학생답\"]}\r\n                                            ></TextField></>\r\n                                    }              \r\n                                    {value[\"iscorrect\"]==false && \r\n                                        <><TextField \r\n                                            style={{height: \"35px\", width: \"70%\", marginLeft: '10px', marginTop: '20px'}}\r\n                                            InputLabelProps={{\r\n                                                style: { color: '#fff', fontStyle: \"bold\" , fontFmaily: 'CookieRun-Regular'}, \r\n                                            }}\r\n                                            inputProps={{\r\n                                                style: {\r\n                                                    fontFamily: 'CookieRun-Regular',\r\n                                                },\r\n                                            }}\r\n                                            InputProps={{\r\n                                               style: {backgroundColor: \"rgba(255,105,97, 0.9)\"}\r\n                                            }}\r\n                                            value={value[\"학생답\"]}\r\n                                            ></TextField></>\r\n                                    }        \r\n                                          \r\n                                    <Typography component=\"h6\" style={{fontFamily:'CookieRun-Regular',color:'red',  fontSize:'12px', marginTop: '20px'}}>\r\n                                        <div style={{display: 'flex', flexDirection: 'row', marginLeft:'10px'}}>\r\n                                            {value[\"답\"].map((val, key)=> {\r\n                                                return (\r\n                                                        key== value[\"답\"].length-1 ?\r\n                                                        <div>{val} &nbsp;</div>\r\n                                                        : \r\n                                                        <div>{val}, &nbsp;</div>\r\n                                                );\r\n                                            })}\r\n                                        </div>\r\n                                    </Typography>\r\n                                    </>\r\n                                }\r\n                                {value[\"label\"]== \"type2\" && \r\n                                    <><Typography component=\"h1\" style={{fontFamily:'CookieRun-Regular', fontSize: \"16px\", marginTop: \"20px\"}}>영어단어가 주어지면, 한글 의미를 적는 문제입니다.</Typography>\r\n                                    <Typography component=\"h1\" style={{fontFamily:'CookieRun-Regular', fontSize: \"16px\", marginTop: \"20px\"}}>{value[\"영단어\"]}</Typography>\r\n                                                    \r\n                                    {value[\"iscorrect\"]==true && \r\n                                        <><TextField \r\n                                            style={{height: \"35px\", width: \"70%\", marginLeft: '10px', marginTop: '20px'}}\r\n                                            InputLabelProps={{\r\n                                                style: { color: '#fff', fontStyle: \"bold\" , fontFmaily: 'CookieRun-Regular'}, \r\n                                            }}\r\n                                            inputProps={{\r\n                                                style: {\r\n                                                    fontFamily: 'CookieRun-Regular',\r\n                                                },\r\n                                            }}\r\n                                            InputProps={{\r\n                                               style: {backgroundColor: \"rgba(119,221,119, 0.9)\"}\r\n                                            }}\r\n                                            value={value[\"학생답\"]}\r\n                                            ></TextField></>\r\n                                    }              \r\n                                    {value[\"iscorrect\"]==false && \r\n                                        <><TextField \r\n                                            style={{height: \"35px\", width: \"70%\", marginLeft: '10px', marginTop: '20px'}}\r\n                                            InputLabelProps={{\r\n                                                style: { color: '#fff', fontStyle: \"bold\" , fontFmaily: 'CookieRun-Regular'}, \r\n                                            }}\r\n                                            inputProps={{\r\n                                                style: {\r\n                                                    fontFamily: 'CookieRun-Regular',\r\n                                                },\r\n                                            }}\r\n                                            InputProps={{\r\n                                               style: {backgroundColor: \"rgba(255,105,97, 0.9)\"}\r\n                                            }}\r\n                                            value={value[\"학생답\"]}\r\n                                            ></TextField></>\r\n                                    }    \r\n                                    <Typography component=\"h6\" style={{fontFamily:'CookieRun-Regular',color:'red',  fontSize:'12px', marginTop: '20px'}}>\r\n                                        <div style={{display: 'flex', flexDirection: 'row', marginLeft:'10px'}}>\r\n                                            {value[\"답\"].map((val, key)=> {\r\n                                                return (\r\n                                                        key== value[\"답\"].length-1 ?\r\n                                                        <div>{val} &nbsp;</div>\r\n                                                        : \r\n                                                        <div>{val}, &nbsp;</div>\r\n                                                );\r\n                                            })}\r\n                                        </div>\r\n                                    </Typography>\r\n                                    </>\r\n                                }\r\n                                {value[\"label\"]== \"type3\" && \r\n                                    <><Typography component=\"h1\" style={{fontFamily:'CookieRun-Regular', fontSize: \"16px\", marginTop: \"20px\"}}>한글 의미 또는 영어 해석이 주어지면, 영어단어를 적는 문제입니다.</Typography>\r\n                                    <Typography component=\"h1\" style={{fontFamily:'CookieRun-Regular', fontSize: \"16px\", marginTop: \"20px\"}}>{value[\"한글의미\"]}</Typography>\r\n                                    <Typography component=\"h1\" style={{fontFamily:'CookieRun-Regular', fontSize: \"16px\", marginTop: \"20px\"}}>{value[\"영어의미글\"]}</Typography>                 \r\n                                    {value[\"iscorrect\"]==true && \r\n                                        <><TextField \r\n                                            style={{height: \"35px\", width: \"70%\", marginLeft: '10px', marginTop: '20px'}}\r\n                                            InputLabelProps={{\r\n                                                style: { color: '#fff', fontStyle: \"bold\" , fontFmaily: 'CookieRun-Regular'}, \r\n                                            }}\r\n                                            inputProps={{\r\n                                                style: {\r\n                                                    fontFamily: 'CookieRun-Regular',\r\n                                                },\r\n                                            }}\r\n                                            InputProps={{\r\n                                               style: {backgroundColor: \"rgba(119,221,119, 0.9)\"}\r\n                                            }}\r\n                                            value={value[\"학생답\"]}\r\n                                            ></TextField></>\r\n                                    }              \r\n                                    {value[\"iscorrect\"]==false && \r\n                                        <><TextField \r\n                                            style={{height: \"35px\", width: \"70%\", marginLeft: '10px', marginTop: '20px'}}\r\n                                            InputLabelProps={{\r\n                                                style: { color: '#fff', fontStyle: \"bold\" , fontFmaily: 'CookieRun-Regular'}, \r\n                                            }}\r\n                                            inputProps={{\r\n                                                style: {\r\n                                                    fontFamily: 'CookieRun-Regular',\r\n                                                },\r\n                                            }}\r\n                                            InputProps={{\r\n                                               style: {backgroundColor: \"rgba(255,105,97, 0.9)\"}\r\n                                            }}\r\n                                            value={value[\"학생답\"]}\r\n                                            ></TextField></>\r\n                                    }    \r\n                                    <Typography component=\"h1\" style={{fontFamily:'CookieRun-Regular', color:'red', fontSize: \"16px\", marginTop: \"20px\"}}>{value[\"답\"]}</Typography>          \r\n                                    </>\r\n                                }\r\n                            </Grid>\r\n                    })\r\n                }\r\n                    \r\n                </Grid>\r\n            </PapperBlock>\r\n        </div>\r\n    );\r\n} \r\n\r\nexport default SolveRoom;","import { useState, useEffect } from 'react';\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height\r\n  };\r\n}\r\n\r\nexport default function useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}\r\n"],"names":["theme","root","mixins","gutters","paddingTop","spacing","paddingBottom","marginBottom","boxShadow","shade","light","color","palette","text","primary","margin","marginTop","descBlock","display","alignItems","breakpoints","down","titleText","flex","title","position","textTransform","fontSize","fontWeight","type","main","dark","textAlign","description","maxWidth","content","padding","borderRadius","rounded","medium","backgroundColor","background","default","up","whiteBg","noMargin","colorMode","grey","borderBottom","overflowX","width","iconTitle","small","border","lighten","height","lineHeight","verticalAlign","marginRight","common","white","PapperBlock","props","classes","desc","children","icon","Paper","className","classNames","elevation","Typography","variant","component","defaultProps","withStyles","styles","useStyles","makeStyles","button","fontFamily","useState","datas","setDatas","isLoaded","setIsLoaded","useWindowDimensions","useParams","id","useEffect","localStorage","getItem","window","location","href","removeItem","axios","baseURL","headers","Authorization","accept","then","res","console","log","catch","error","container","justify","direction","Object","entries","map","index","value","item","md","style","marginLeft","InputLabelProps","fontStyle","fontFmaily","inputProps","InputProps","flexDirection","val","key","length","getWindowDimensions","innerWidth","innerHeight","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener"],"sourceRoot":""}