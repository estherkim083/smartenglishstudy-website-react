{"version":3,"file":"static/js/4453.c700b3f3.chunk.js","mappings":"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","sources":["containers/Table/WritingBorderedTable.js","containers/Pages/WritingTab/EssayWritingView.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport styles from './tableStyle-jss';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onPageChange } = props;\r\n\r\n  const handleFirstPageButtonClick = (event) => {\r\n    onPageChange(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = (event) => {\r\n    onPageChange(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = (event) => {\r\n    onPageChange(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = (event) => {\r\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\n\r\n// let id = 0;\r\nfunction createData(id, name, joined_at, created_at, essaytitle) {\r\n  // id += 1;\r\n  return {\r\n    id,\r\n    name,\r\n    joined_at,\r\n    created_at,\r\n    essaytitle\r\n  };\r\n}\r\n\r\n\r\n\r\nfunction WritingBorderedTable(props) {\r\n  const { classes, datas } = props;\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const [page, setPage] = React.useState(0);\r\n  const baseURL= process.env.REACT_APP_BASE_BACKEND_URL;\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n  // const datas = [\r\n  //   createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  //   createData('Donut', 452, 25.0, 51, 4.9),\r\n  //   createData('Eclair', 262, 16.0, 24, 6.0),\r\n  //   createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  //   createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n  //   createData('Honeycomb', 408, 3.2, 87, 6.5),\r\n  //   createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  //   createData('Jelly Bean', 375, 0.0, 94, 0.0),\r\n  //   createData('KitKat', 518, 26.0, 65, 7.0),\r\n  //   createData('Lollipop', 392, 0.2, 98, 0.0),\r\n  //   createData('Marshmallow', 318, 0, 81, 2.0),\r\n  //   createData('Nougat', 360, 19.0, 9, 37.0),\r\n  //   createData('Oreo', 437, 18.0, 63, 4.0),\r\n  // ]\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [isPageLoaded, setIsPageLoaded] = useState(false); \r\n  let { id } = useParams();\r\n  //const [datas, setDatas] = useState([]);\r\n  const emptyRows = datas != null? rowsPerPage - Math.min(rowsPerPage, datas.length - page * rowsPerPage)\r\n                                    : -1;\r\n\r\n  const history = useHistory();\r\n  const handleDelete= (id) => {\r\n  };\r\n  useEffect(() => {\r\n    setIsLoaded(true);\r\n  });\r\n  \r\n  useEffect(() => {\r\n    if (isLoaded) {\r\n        setIsPageLoaded(true);\r\n    }   console.log(datas);\r\n  }, [isLoaded]);\r\n\r\n  const moveToSpecificPage= (n_id, n) => {\r\n    \r\n    history.push('/writing/essay/'+id+'/'+n_id+'/'+n.email); ///writing/essay/:id/:userid\r\n  };\r\n  return (\r\n    <div className={classes.rootTable}>\r\n      <Table className={classNames(classes.table, classes.bordered, classes.hover)} > \r\n        <TableHead>\r\n          <TableRow> \r\n            <TableCell width={130} className={classes.cellTitleStyle}>이름&nbsp;&nbsp;☘</TableCell>\r\n            <TableCell width={150} align=\"right\" className={classes.cellTitleStyle}>방참여날짜</TableCell>\r\n            <TableCell width={150} align=\"right\" className={classes.cellTitleStyle}>수정날짜</TableCell>\r\n            <TableCell width={430} align=\"center\" className={classes.cellTitleStyle}>에세이제목</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {datas != null && (rowsPerPage > 0\r\n            ? Object.entries(datas).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : Object.entries(datas)\r\n          ).map(([n_id, n]) => (\r\n            <TableRow key={n_id}> \r\n              <TableCell padding=\"default\" className={classes.cellRegularStyle} onClick={() => moveToSpecificPage(n_id, n)}>{n.user_name}</TableCell>\r\n              <TableCell align=\"right\" className={classes.cellRegularStyle} onClick={() => moveToSpecificPage(n_id, n)}>{n.participated_at}</TableCell>\r\n              <TableCell align=\"right\" className={classes.cellRegularStyle} onClick={() => moveToSpecificPage(n_id, n)}>{n.modified_at}</TableCell>\r\n              <TableCell align=\"center\" className={classes.cellRegularStyle} onClick={() => moveToSpecificPage(n_id, n)}>{n.topic}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n          {emptyRows > 0 && (\r\n            <TableRow style={{ height: 0 * emptyRows }}>\r\n              <TableCell colSpan={6} className={classes.cellRegularStyle}>. . . . .</TableCell>\r\n            </TableRow>\r\n          )}\r\n        </TableBody>\r\n        \r\n        <TableFooter>\r\n          <TableRow>\r\n            {datas!= null && datas!= undefined && <TablePagination\r\n              rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n              colSpan={3}\r\n              count={Object.keys(datas).length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              SelectProps={{\r\n                inputProps: { 'aria-label': '페이지당 몇개' },\r\n                native: true,\r\n              }}\r\n              onPageChange={handleChangePage}\r\n              onRowsPerPageChange={handleChangeRowsPerPage}\r\n              ActionsComponent={TablePaginationActions}\r\n              labelRowsPerPage={'페이지당 몇개'}\r\n              labelDisplayedRows={({ from, to, count }) =>\r\n                    `전체 ${count !== -1 ? count : `MORE THAN ${to}`}개, ${from}-${to}`}\r\n            />}\r\n          </TableRow>\r\n        </TableFooter>\r\n      </Table>\r\n    </div>\r\n  );\r\n}\r\n\r\nWritingBorderedTable.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  datas: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(WritingBorderedTable);\r\n","import React, {useEffect , useState, useCallback} from 'react';\r\nimport PapperBlock from '../../../components/PapperBlock/PapperBlock';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport WritingBorderedTable from '../../Table/WritingBorderedTable';\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Button from '@material-ui/core/Button';\r\nimport Loading from '../../../components/Loading';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    joinButton : {\r\n        backgroundColor: theme.palette.type === 'dark' ? theme.palette.primary.dark : theme.palette.primary.main, \r\n        color: theme.palette.type === 'dark' ? theme.palette.common.white : theme.palette.common.white,\r\n        width:\"8%\",\r\n        fontFamily: 'CookieRun-Regular',\r\n        fontSize: '15px',\r\n        marginTop: \"30px\",\r\n        '&:hover': {\r\n          backgroundColor: theme.palette.type === 'dark' ? theme.palette.primary.main : theme.palette.primary.dark, \r\n        },\r\n    }\r\n}));\r\n\r\nfunction EssayWritingView(props) {\r\n\r\n    const classes = useStyles();\r\n    let { id } = useParams();\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [isPageLoaded, setIsPageLoaded] = useState(false); //this helps \r\n    const [data, setData] = useState({});\r\n    const baseURL = process.env.REACT_APP_BASE_BACKEND_URL;\r\n    const [expanded, setExpanded] = useState(null);\r\n\r\n    const handleChange = useCallback(panel => {\r\n        const expandedValue = expanded !== panel ? panel : false;\r\n        setExpanded(expandedValue);\r\n    }, [expanded]);\r\n\r\n    const handleJoinButton= () => {\r\n        axios\r\n            .post(baseURL+\"writing/join-essay-room/\"+id , {},\r\n            {\r\n                headers: {\r\n                Authorization: localStorage.getItem('token')\r\n                    ? 'Token ' + localStorage.getItem('token')\r\n                    : null,\r\n                'Content-Type': 'application/json',\r\n                accept: 'application/json',\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n            })\r\n            .then(function (res) {  \r\n                console.log(res);\r\n                window.location.href=\"/writing/essay/\"+id;\r\n            });\r\n    };\r\n    const handleUnJoinButton= () => {\r\n        axios\r\n            .post(baseURL+\"writing/unjoin-essay-room/\"+id , {},\r\n            {\r\n                headers: {\r\n                Authorization: localStorage.getItem('token')\r\n                    ? 'Token ' + localStorage.getItem('token')\r\n                    : null,\r\n                'Content-Type': 'application/json',\r\n                accept: 'application/json',\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n            })\r\n            .then(function (res) {  \r\n                console.log(res);\r\n                window.location.href=\"/writing/essay/\"+id;\r\n            });\r\n    };\r\n    useEffect(() => {\r\n        var author= localStorage.getItem(\"user_name\");\r\n        \r\n        if(author === null) {\r\n            window.location.href=\"/auth/email\";\r\n        }\r\n        if(localStorage.getItem(\"MyProfileOnce\")) {\r\n            localStorage.removeItem(\"MyProfileOnce\");\r\n        }\r\n        if(localStorage.getItem(\"ChatMessageOnce\")) {\r\n          localStorage.removeItem(\"ChatMessageOnce\");\r\n        } \r\n        setIsLoaded(true);\r\n    });\r\n    useEffect(() => {\r\n        if(isLoaded) {\r\n            axios\r\n                .get(baseURL+\"writing/get-essay-room-data/\"+id, {\r\n                    headers: {\r\n                    Authorization: localStorage.getItem('token')\r\n                        ? 'Token ' + localStorage.getItem('token')\r\n                        : null,\r\n                    'Content-Type': 'application/json',\r\n                    accept: 'application/json',\r\n                    }\r\n                })\r\n                .then(res => {\r\n                    setData(res[\"data\"]);\r\n                    console.log(res[\"data\"]);\r\n                    setIsPageLoaded(true);                        \r\n                })\r\n                .catch(error => {});\r\n        }\r\n\r\n    }, [isLoaded]);\r\n    if(!isPageLoaded) {\r\n        return <Loading/>;\r\n    }\r\n    return (\r\n        <div>\r\n            <PapperBlock title=\"EssayWriting Menu\" whiteBg icon=\"ion-ios-grid-outline\" desc=\"\r\n            영어에세이 글쓰기 방 화면입니다. 에세이를 직접 작성하고 공유해보세요. \">\r\n                <Grid\r\n                    container\r\n                    alignItems=\"flex-start\"\r\n                    justify=\"center\"\r\n                    direction=\"row\"\r\n                    style= {{padding: \"80px\", marginTop: '-100px'}}\r\n                    spacing={2}>\r\n                   {(data!= null && data!= undefined && Object.keys(data).length != 0) && \r\n                        <><Grid item md={12}>\r\n                            {console.log(data)}\r\n                            <Accordion expanded={expanded === 'panel1'} onChange={() => handleChange('panel1')}>\r\n                                <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                                <Typography style={{fontSize:'20px', fontWeight:'bold', fontFamily:'CookieRun-Regular'}}>{Object.keys(data.room_info.topic).length !=0 ? data.room_info.topic: ''}</Typography>\r\n                                </AccordionSummary>\r\n                                <AccordionDetails>\r\n                                <Typography style={{fontFamily:'CookieRun-Regular'}}>\r\n                                    {Object.keys(data.room_info.about_content).length !=0? data.room_info.about_content: ''}\r\n                                </Typography>\r\n                                </AccordionDetails>\r\n                            </Accordion>\r\n                        </Grid>\r\n                        <Grid item md={12}>\r\n                            <WritingBorderedTable datas={Object.keys(data.essays_info)!= 0 ? data.essays_info: null}/>\r\n                        </Grid>\r\n                        {data.room_info.participating ==false ? \r\n                        <Grid item md={12}>\r\n                            <Button className={classes.joinButton} onClick={handleJoinButton}>방 참여하기</Button>\r\n                        </Grid>: \r\n                        <Grid item md={12}>\r\n                            <Button className={classes.joinButton} onClick={handleUnJoinButton}>방 탈퇴하기</Button>\r\n                        </Grid>                       \r\n                        }\r\n                        </>\r\n                    }\r\n                </Grid>\r\n            </PapperBlock>\r\n        </div>\r\n    );\r\n} \r\n\r\nexport default EssayWritingView;"],"names":["useStyles1","makeStyles","theme","root","flexShrink","marginLeft","spacing","TablePaginationActions","props","classes","useTheme","count","page","rowsPerPage","onPageChange","className","IconButton","onClick","event","disabled","direction","LastPage","FirstPage","KeyboardArrowRight","KeyboardArrowLeft","Math","ceil","max","withStyles","styles","datas","React","setRowsPerPage","setPage","useState","isLoaded","setIsLoaded","setIsPageLoaded","id","useParams","emptyRows","min","length","history","useHistory","useEffect","console","log","moveToSpecificPage","n_id","n","push","email","rootTable","Table","classNames","table","bordered","hover","TableHead","TableRow","TableCell","width","cellTitleStyle","align","TableBody","Object","entries","slice","map","padding","cellRegularStyle","user_name","participated_at","modified_at","topic","style","height","colSpan","TableFooter","undefined","TablePagination","rowsPerPageOptions","label","value","keys","SelectProps","inputProps","native","newPage","onRowsPerPageChange","parseInt","target","ActionsComponent","labelRowsPerPage","labelDisplayedRows","from","to","useStyles","joinButton","backgroundColor","palette","type","primary","dark","main","color","common","white","fontFamily","fontSize","marginTop","isPageLoaded","data","setData","baseURL","process","expanded","setExpanded","handleChange","useCallback","panel","localStorage","getItem","window","location","href","removeItem","axios","headers","Authorization","accept","then","res","catch","error","PapperBlock","title","whiteBg","icon","desc","Grid","container","alignItems","justify","item","md","Accordion","onChange","AccordionSummary","expandIcon","ExpandMore","Typography","fontWeight","room_info","AccordionDetails","about_content","essays_info","participating","Button","Loading"],"sourceRoot":""}