{"version":3,"file":"static/js/7074.00f3872d.chunk.js","mappings":"4WAqBA,SAASA,EAAaC,GAClB,IACIC,EAUAD,EAVAC,QACAC,EASAF,EATAE,UACAC,EAQAH,EARAG,UACAC,EAOAJ,EAPAI,KACAC,EAMAL,EANAK,GAEAC,GAIAN,EALAO,cAKAP,EAJAM,MACAE,EAGAR,EAHAQ,MACAC,EAEAT,EAFAS,KACAC,EACAV,EADAU,MAEJ,GAAgCC,EAAAA,EAAAA,WAAS,GAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAAkCF,EAAAA,EAAAA,UAAS,MAA3C,eAAQG,EAAR,KAAmBC,EAAnB,KAEMC,GAAUC,EAAAA,EAAAA,eAEhBC,EAAAA,EAAAA,YAAU,WACNL,GAAY,EACf,KACDK,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,KAAeC,EAAAA,EAAAA,IAAIC,EAAAA,EAAD,oBAAuBjB,KACpCkB,MAAK,SAACC,GACPR,EAAaQ,EACZ,IACAC,OAAM,SAACC,GACP,GACR,GAAC,CAACb,IA8BL,OACE,UAAC,IAAD,CAAMc,UAAWC,IAAW1B,EAAQ2B,aAAaC,EAAAA,EAAAA,IAAU,KAAMnB,IAAUD,EAAOR,EAAQ6B,SAAW,IAArG,WACE,gBAAKJ,UAAWzB,EAAQ8B,OAAxB,SACS,yBAANzB,GACC,SAAC,IAAD,CAAM0B,MAAM,4BAAQC,MAAO,CAACC,WAAY,qBAAsBR,UAAWzB,EAAQkC,gBACjF,0BAGU,MAAbrB,IACC,SAAC,IAAD,CACEY,UAAWzB,EAAQmC,aACnBC,MAAOvB,EACPwB,MAAOpC,KAGX,UAAC,IAAD,CAAawB,UAAWzB,EAAQsC,mBAAhC,WACE,SAAC,IAAD,CAAYC,QAAM,EAACC,cAAY,EAACC,QAAQ,KAAKhB,UAAWzB,EAAQqC,MAAOK,UAAU,KAAjF,SACGzC,KAEH,UAAC,IAAD,CAAYyC,UAAU,IAAIjB,UAAWzB,EAAQ2C,KAA7C,UACGzC,EADH,8BAC4BK,EAD5B,QAMA,iBAAKyB,MAAQ,CAACY,QAAS,OAAQC,cAAe,MAAOC,UAAW,KAAhE,UACO,yBAANzC,IACG,iCAAE,SAAC,IAAD,CAAQ0C,KAAK,QAAQN,QAAQ,WAAWO,MAAM,YAAYC,QAxDlD,WACdlC,EAAQmC,KAAK,mBAAmB9C,EACnC,EAsDwF4B,MAAO,CAACC,WAAY,qBAAnG,yBAGF,SAAC,IAAD,CAAYgB,QAnDQ,WACxBE,IAAAA,KACQC,6DAAiChD,EAAK,CAAC,EAC7C,CACIiD,QAAS,CACTC,cAAeC,aAAaC,QAAQ,SAC9B,SAAWD,aAAaC,QAAQ,SAChC,KACN,eAAgB,mBAChBC,OAAQ,sBAGXlC,OAAM,SAAUC,GAChB,IACAH,MAAK,SAAUqC,GACZC,QAAQC,IAAIF,GACZ3C,EAAQmC,KAAK,mBAEhB,GAEN,EA+BkDlB,MAAQ,CAACc,UAAW,QAA/D,UACI,SAAC,IAAD,SAGD,oBAANzC,IACG,+BAAE,SAAC,IAAD,CAAQ0C,KAAK,QAAQN,QAAQ,WAAWO,MAAM,YAAYC,QA7DjD,WAEjBlC,EAAQmC,KAAK,mBAAmB9C,EAEjC,EAyDyF4B,MAAO,CAACC,WAAY,qBAApG,kCAQb,CAeDnC,EAAa+D,aAAe,CAC1BrD,MAAM,GAGR,IAAMsD,GAAyBC,EAAAA,EAAAA,KAAAA,CAAYjE,GAC3C,KAAekE,EAAAA,EAAAA,GAAWC,EAAAA,EAA1B,CAAkCH,E,yJCpI5BI,GAAYC,EAAAA,EAAAA,IAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,QAAS,QAEbC,OAAS,CACLC,OAAQ,OACRC,gBAAwC,SAAvBL,EAAMM,QAAQrE,KAAkB+D,EAAMM,QAAQC,QAAQC,KAAOR,EAAMM,QAAQC,QAAQE,KACpG7B,OAAOoB,EAAMM,QAAQrE,KAAkB+D,EAAMM,QAAQI,OAAOC,OAC5DtE,MAAM,MACNwB,WAAY,oBACZ+C,SAAU,OACVlC,UAAW,OACX,UAAW,CACX2B,gBAAwC,SAAvBL,EAAMM,QAAQrE,KAAkB+D,EAAMM,QAAQC,QAAQE,KAAOT,EAAMM,QAAQC,QAAQC,OAb/E,IAiG7B,UA/EA,SAAuB7E,GAEnB,IAAMC,EAAUkE,IAChB,GAA0BxD,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOuE,EAAP,KAAcC,EAAd,KACA,GAAgCxE,EAAAA,EAAAA,WAAS,GAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAAwCF,EAAAA,EAAAA,WAAS,GAAjD,eAAOyE,EAAP,KAAqBC,EAArB,KACA,GAA0BC,EAAAA,EAAAA,KAoC1B,OApCA,EAAQC,OAAR,EAAgB7E,OAEhBQ,EAAAA,EAAAA,YAAU,WAEQ,OADFsC,aAAaC,QAAQ,eAE7B+B,OAAOC,SAASC,KAAK,eAEtBlC,aAAaC,QAAQ,kBACpBD,aAAamC,WAAW,iBAEzBnC,aAAaC,QAAQ,oBACtBD,aAAamC,WAAW,mBAE1B9E,GAAY,EACf,KACDK,EAAAA,EAAAA,YAAU,WACHN,GACCwC,IAAAA,IACSC,+DAAoC,CACrCC,QAAS,CACTC,cAAeC,aAAaC,QAAQ,SAC9B,SAAWD,aAAaC,QAAQ,SAChC,KACN,eAAgB,mBAChBC,OAAQ,sBAGXpC,MAAK,SAAAqC,GACFwB,EAASxB,EAAG,MACZC,QAAQC,IAAIF,EAAG,MACf0B,GAAgB,EACnB,IACA7D,OAAM,SAAAC,GAAW,GAG7B,GAAC,CAACb,IACCwE,GAIA,gBAAK1D,UAAWzB,EAAQqE,KAAxB,UACI,SAAC,IAAD,CAAahC,MAAM,8CAAWsD,SAAO,EAACC,KAAK,uBAAuBjD,KAAK,gHAAvE,UAGI,SAAC,IAAD,CACIkD,WAAS,EACTC,WAAW,UACXC,QAAQ,eACRC,UAAU,MACVC,QAAS,EALb,SAOKhB,GAAQ,CAAC,GACNiB,OAAOC,QAAQlB,GAAOmB,KAAK,YAAmB,IAAD,eAAhBC,EAAgB,KAAXC,EAAW,KACzC,OAAO,SAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,UACE,SAAC,IAAD,CACGpG,GAAKiG,EACL9F,MAAO+F,EAAM/F,MACbN,UAAWqG,EAAMG,mBACjBvG,UAAWoG,EAAMI,mBACjBvG,KAAOmG,EAAMzF,UACbP,cAAgBgG,EAAMK,mBACtBtG,KAAM,mBACNG,MAAI,KAGnB,WA5BV,SAAC,IAAD,GAkCd,C","sources":["components/RoomCard/QuizRoomCard.js","containers/Pages/QuizTab/SolveRoomList.js"],"sourcesContent":["import React ,{useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport withWidth, { isWidthUp } from '@material-ui/core/withWidth';\r\nimport classNames from 'classnames';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Button from '@material-ui/core/Button';\r\nimport styles from './cardStyle-jss';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { storage } from '../../firebase';\r\nimport { ref, getDownloadURL } from \"firebase/storage\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport axios from 'axios';\r\n\r\nfunction QuizRoomCard(props) {\r\n    const {\r\n        classes,\r\n        roomtitle,\r\n        aboutroom,\r\n        hash,\r\n        id,\r\n        participating,\r\n        type,\r\n        owner,\r\n        list,\r\n        width,\r\n    } = props;\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [ thumbnail, setThumbnail]= useState(null);\r\n    const baseURL = process.env.REACT_APP_BASE_BACKEND_URL;\r\n    const history = useHistory();\t\r\n\r\n    useEffect(()=> {\r\n        setIsLoaded(true);\r\n    });\r\n    useEffect(()=> {\r\n        getDownloadURL(ref(storage, `quiz-room/${hash}`))\r\n            .then((url) => {\r\n            setThumbnail(url);\r\n            })\r\n            .catch((error) => {\r\n            });\r\n    },[isLoaded]);\r\n    const detailOpen= () => {\r\n        history.push(\"/quiz/make-quiz/\"+id);\r\n    }\r\n    const detailOpen2= ()=> {\r\n      \r\n      history.push(\"/quiz/take-quiz/\"+id);\r\n      //window.location.href= \"/smartenglishstudy-website-react/quiz/take-quiz/\"+id;\r\n    };\r\n    const handleDeleteQuizRoom= () => {\r\n        axios\r\n          .post(baseURL+\"quiz/delete-quiz-room/\"+id , {},\r\n          {\r\n              headers: {\r\n              Authorization: localStorage.getItem('token')\r\n                  ? 'Token ' + localStorage.getItem('token')\r\n                  : null,\r\n              'Content-Type': 'application/json',\r\n              accept: 'application/json',\r\n              }\r\n          })\r\n          .catch(function (error) {\r\n          })\r\n          .then(function (res) {  \r\n              console.log(res);\r\n              history.push(\"/quiz/make-quiz/\");\r\n             // window.location.href= \"/smartenglishstudy-website-react/quiz/make-quiz/\";\r\n          });\r\n\r\n    };\r\n  return (\r\n    <Card className={classNames(classes.cardProduct, isWidthUp('sm', width) && list ? classes.cardList : '')}>\r\n      <div className={classes.status}>\r\n        {type==\"QuizOwnerViewRoomCard\" ?\r\n          <Chip label=\"직접 만듦\" style={{fontFamily: \"CookieRun-Regular\"}} className={classes.chipDiscount} /> :\r\n          <></>\r\n        }\r\n      </div>\r\n      {thumbnail != null && \r\n        <CardMedia\r\n          className={classes.mediaProduct}\r\n          image={thumbnail}\r\n          title={roomtitle}\r\n        />\r\n      }\r\n      <CardContent className={classes.floatingButtonWrap}>\r\n        <Typography noWrap gutterBottom variant=\"h5\" className={classes.title} component=\"h2\">\r\n          {roomtitle}\r\n        </Typography>\r\n        <Typography component=\"p\" className={classes.desc}>\r\n          {aboutroom} &nbsp; (출제자: {owner})\r\n        </Typography>\r\n        {/* <div className={classes.ratting}>\r\n          <Rating value={ratting} max={5} readOnly />\r\n        </div> */}\r\n        <div style= {{display: 'flex', flexDirection: 'row', marginTop: \"0\"}}>\r\n        {type==\"QuizOwnerViewRoomCard\" && \r\n            <><Button size=\"small\" variant=\"outlined\" color=\"secondary\" onClick={detailOpen} style={{fontFamily: \"CookieRun-Regular\"}}>\r\n                See Detail\r\n            </Button>\r\n            <IconButton onClick={handleDeleteQuizRoom} style= {{marginTop: '-3px'}}>\r\n                <DeleteIcon></DeleteIcon>\r\n            </IconButton></>\r\n        }\r\n        {type==\"QuizViewRoomCard\" && \r\n            <><Button size=\"small\" variant=\"outlined\" color=\"secondary\" onClick={detailOpen2} style={{fontFamily: \"CookieRun-Regular\"}}>\r\n                See Detail\r\n            </Button></>\r\n        }\r\n          </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nQuizRoomCard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  width: PropTypes.string.isRequired,\r\n  roomtitle: PropTypes.string.isRequired,\r\n  aboutroom: PropTypes.string.isRequired,\r\n  hash: PropTypes.string.isRequired,\r\n  participating: PropTypes.bool.isRequired,\r\n  list: PropTypes.bool,\r\n  id: PropTypes.string.isRequired,\r\n  owner: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired\r\n};\r\n\r\nQuizRoomCard.defaultProps = {\r\n  list: false,\r\n};\r\n\r\nconst QuizRoomCardResponsive = withWidth()(QuizRoomCard);\r\nexport default withStyles(styles)(QuizRoomCardResponsive);\r\n","import React, {useEffect , useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PapperBlock from '../../../components/PapperBlock/PapperBlock';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport useWindowDimensions from '../../../useWindowDimensions';\r\nimport QuizRoomCard from '../../../components/RoomCard/QuizRoomCard';\r\nimport axios from 'axios';\r\nimport Loading from '../../../components/Loading';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: \"15px\"\r\n    },      \r\n    button : {\r\n        margin: \"10px\",\r\n        backgroundColor: theme.palette.type === 'dark' ? theme.palette.primary.dark : theme.palette.primary.main, \r\n        color: theme.palette.type === 'dark' ? theme.palette.common.white : theme.palette.common.white,\r\n        width:\"45%\",\r\n        fontFamily: 'CookieRun-Regular',\r\n        fontSize: '15px',\r\n        marginTop: \"30px\",\r\n        '&:hover': {\r\n        backgroundColor: theme.palette.type === 'dark' ? theme.palette.primary.main : theme.palette.primary.dark, \r\n        },\r\n    },\r\n}));\r\n\r\nfunction SolveRoomList(props) {\r\n\r\n    const classes = useStyles();\r\n    const [datas, setDatas] = useState({});\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [isPageLoaded, setIsPageLoaded] = useState(false); //this helps \r\n    const { height, width } = useWindowDimensions();\r\n    const baseURL = process.env.REACT_APP_BASE_BACKEND_URL;\r\n    useEffect(() => {\r\n        var author= localStorage.getItem(\"user_name\");\r\n        if(author === null) {\r\n            window.location.href=\"/auth/email\";\r\n        }\r\n        if(localStorage.getItem(\"MyProfileOnce\")) {\r\n            localStorage.removeItem(\"MyProfileOnce\");\r\n        }\r\n        if(localStorage.getItem(\"ChatMessageOnce\")) {\r\n          localStorage.removeItem(\"ChatMessageOnce\");\r\n        } \r\n        setIsLoaded(true);\r\n    });\r\n    useEffect(() => {\r\n        if(isLoaded) {\r\n            axios\r\n                .get(baseURL+\"quiz/get-quiz-room-list/\", {\r\n                    headers: {\r\n                    Authorization: localStorage.getItem('token')\r\n                        ? 'Token ' + localStorage.getItem('token')\r\n                        : null,\r\n                    'Content-Type': 'application/json',\r\n                    accept: 'application/json',\r\n                    }\r\n                })\r\n                .then(res => {\r\n                    setDatas(res[\"data\"]);\r\n                    console.log(res[\"data\"]);\r\n                    setIsPageLoaded(true);\r\n                })\r\n                .catch(error => {});\r\n            \r\n        }\r\n    },[isLoaded]);\r\n    if(!isPageLoaded) {\r\n        return <Loading/>;\r\n    }\r\n    return (\r\n        <div className={classes.root}>\r\n            <PapperBlock title=\"퀴즈 문제풀이방\" whiteBg icon=\"ion-ios-grid-outline\" desc=\"\r\n             퀴즈 문제풀이방에서 문제를 풀어보세요.\">\r\n                \r\n                <Grid\r\n                    container\r\n                    alignItems=\"stretch\"\r\n                    justify=\"space-around\"\r\n                    direction=\"row\"\r\n                    spacing={3}\r\n                    >                    \r\n                    {datas!= {} && \r\n                        Object.entries(datas).map( ([key, value]) => {\r\n                            return <Grid item md={12}>\r\n                                     <QuizRoomCard\r\n                                        id= {key}\r\n                                        owner={value.owner}\r\n                                        roomtitle={value.방제목}\r\n                                        aboutroom={value.방설명}\r\n                                        hash= {value.thumbnail}\r\n                                        participating= {value.참여중}\r\n                                        type= \"QuizViewRoomCard\"\r\n                                        list\r\n                                        />\r\n                                    </Grid>\r\n                        })\r\n                    }\r\n                </Grid>\r\n            </PapperBlock>\r\n        </div>\r\n    );\r\n} \r\n\r\nexport default SolveRoomList;"],"names":["QuizRoomCard","props","classes","roomtitle","aboutroom","hash","id","type","participating","owner","list","width","useState","isLoaded","setIsLoaded","thumbnail","setThumbnail","history","useHistory","useEffect","getDownloadURL","ref","storage","then","url","catch","error","className","classNames","cardProduct","isWidthUp","cardList","status","label","style","fontFamily","chipDiscount","mediaProduct","image","title","floatingButtonWrap","noWrap","gutterBottom","variant","component","desc","display","flexDirection","marginTop","size","color","onClick","push","axios","baseURL","headers","Authorization","localStorage","getItem","accept","res","console","log","defaultProps","QuizRoomCardResponsive","withWidth","withStyles","styles","useStyles","makeStyles","theme","root","padding","button","margin","backgroundColor","palette","primary","dark","main","common","white","fontSize","datas","setDatas","isPageLoaded","setIsPageLoaded","useWindowDimensions","height","window","location","href","removeItem","whiteBg","icon","container","alignItems","justify","direction","spacing","Object","entries","map","key","value","item","md","방제목","방설명","참여중"],"sourceRoot":""}