{"version":3,"file":"static/js/8647.a21fa11f.chunk.js","mappings":"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","sources":["components/PapperBlock/papperStyle-jss.js","components/PapperBlock/PapperBlock.js","containers/Pages/QuizTab/CreateQuiz.js","firebase.js"],"sourcesContent":["import { lighten } from '@material-ui/core/styles/colorManipulator';\nconst styles = theme => ({\n  root: theme.mixins.gutters({\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    boxShadow: theme.shade.light,\n    color: theme.palette.text.primary,\n    '&$noMargin': {\n      margin: 0\n    },\n    marginTop:\"160px\",\n  }),\n  descBlock: {\n    display: 'flex',\n    alignItems: 'center',\n    marginBottom: theme.spacing(5),\n    [theme.breakpoints.down('sm')]: {\n      marginBottom: theme.spacing(3),\n    }\n  },\n  titleText: {\n    flex: 1,\n  },\n  title: {\n    position: 'relative',\n    textTransform: 'capitalize',\n    fontSize: 24,\n    fontWeight: 400,\n    color: theme.palette.type === 'dark' ? theme.palette.primary.main : theme.palette.primary.dark,\n    [theme.breakpoints.down('xs')]: {\n      textAlign: 'center',\n      fontWeight: 600,\n      marginBottom: theme.spacing(1)\n    },    \n    fontFamily: 'CookieRun-Regular'\n  },\n  description: {\n    maxWidth: 960,\n    paddingTop: theme.spacing(0.5),\n    [theme.breakpoints.down('xs')]: {\n      textAlign: 'center'\n    },    \n    fontFamily: 'CookieRun-Regular'\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1),\n    borderRadius: theme.rounded.medium,\n    backgroundColor: theme.palette.background.default,\n    [theme.breakpoints.up('lg')]: {\n      padding: theme.spacing(2)\n    }\n  },\n  whiteBg: {\n    backgroundColor: 'transparent',\n    margin: 0,\n    padding: 0,\n  },\n  noMargin: {},\n  colorMode: {\n    backgroundColor: theme.palette.type === 'dark' ? theme.palette.primary.dark : theme.palette.primary.main,\n    '& $title': {\n      color: theme.palette.grey[100],\n      '&:after': {\n        borderBottom: `5px solid ${theme.palette.primary.light}`\n      }\n    },\n    '& $description': {\n      color: theme.palette.grey[100],\n    }\n  },\n  overflowX: {\n    width: '100%',\n    overflowX: 'auto',\n  },\n  iconTitle: {\n    borderRadius: theme.rounded.small,\n    border: theme.palette.type === 'dark' ? 'none' : `1px solid ${lighten(theme.palette.primary.dark, 0.9)}`,\n    boxShadow: `0 2px 15px -5px ${theme.palette.primary.main}`,\n    background: theme.palette.type === 'dark' ? theme.palette.primary.main : lighten(theme.palette.primary.light, 0.5),\n    width: 48,\n    height: 48,\n    textAlign: 'center',\n    lineHeight: '44px',\n    verticalAlign: 'middle',\n    marginRight: theme.spacing(3),\n    [theme.breakpoints.down('xs')]: {\n      display: 'none'\n    },\n    '& i': {\n      fontSize: 28,\n      verticalAlign: 'baseline',\n      color: theme.palette.type === 'dark' ? theme.palette.common.white : theme.palette.primary.main\n    }\n  }\n});\n\nexport default styles;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport styles from './papperStyle-jss';\n\n\nfunction PapperBlock(props) {\n  \n  const {\n    classes,\n    title,\n    desc,\n    children,\n    whiteBg,\n    noMargin,\n    colorMode,\n    overflowX,\n    icon\n  } = props;\n  return (\n    <div>\n      <Paper className={classNames(classes.root, noMargin && classes.noMargin, colorMode && classes.colorMode)} elevation={0}>\n        <div className={classes.descBlock}>\n          <span className={classes.iconTitle}>\n            <i className={icon} />\n          </span>\n          <div className={classes.titleText}>\n            <Typography variant=\"h6\" component=\"h2\" className={classes.title}>\n              {title}\n            </Typography>\n            <Typography component=\"p\" className={classes.description}>\n              {desc}\n            </Typography>\n          </div>\n        </div>\n        \n        <section className={classNames(classes.content, whiteBg && classes.whiteBg, overflowX && classes.overflowX)}>\n          {children}\n        </section>\n      </Paper>\n    </div>\n  );\n}\n\nPapperBlock.propTypes = {\n  classes: PropTypes.object.isRequired,\n  title: PropTypes.string.isRequired,\n  desc: PropTypes.string.isRequired,\n  icon: PropTypes.string,\n  children: PropTypes.node.isRequired,\n  whiteBg: PropTypes.bool,\n  colorMode: PropTypes.bool,\n  noMargin: PropTypes.bool,\n  overflowX: PropTypes.bool,\n};\n\nPapperBlock.defaultProps = {\n  whiteBg: false,\n  noMargin: false,\n  colorMode: false,\n  overflowX: false,\n  icon: 'ion-ios-bookmark-outline'\n};\n\nexport default withStyles(styles)(PapperBlock);\n","import React, {useEffect , useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PapperBlock from '../../../components/PapperBlock/PapperBlock';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport StepContent from '@material-ui/core/StepContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Input from '@material-ui/core/Input';\r\nimport { ref, uploadBytes } from \"firebase/storage\";\r\nimport { storage } from '../../../firebase';\r\nimport Box from '@material-ui/core/Box';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport SyncIcon from '@material-ui/icons/Sync';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport axios from 'axios';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: \"15px\"\r\n    },\r\n    button : {\r\n        margin: \"10px\",\r\n        backgroundColor: theme.palette.type === 'dark' ? theme.palette.primary.dark : theme.palette.primary.main, \r\n        color: theme.palette.type === 'dark' ? theme.palette.common.white : theme.palette.common.white,\r\n        width:\"15%\",\r\n        fontFamily: 'CookieRun-Regular',\r\n        fontSize: '15px',\r\n        marginTop: \"30px\",\r\n        '&:hover': {\r\n        backgroundColor: theme.palette.type === 'dark' ? theme.palette.primary.main : theme.palette.primary.dark, \r\n        },\r\n    },    \r\n    addButton : {\r\n        backgroundColor: theme.palette.type === 'dark' ? theme.palette.primary.dark : theme.palette.primary.main, \r\n        color: theme.palette.type === 'dark' ? theme.palette.common.white : theme.palette.common.white,\r\n        fontFamily: 'CookieRun-Regular',\r\n        fontSize: '15px',\r\n        '&:hover': {\r\n        backgroundColor: theme.palette.type === 'dark' ? theme.palette.primary.main : theme.palette.primary.dark, \r\n        },\r\n    },\r\n    formControl: {\r\n        marginTop: '-8px'\r\n    },\r\n    select: {\r\n        width: '140px',\r\n        backgroundColor: theme.palette.primary.light\r\n    },\r\n    changeFontFamilyClasses: {\r\n      fontFamily: \"CookieRun-Regular\",\r\n    },\r\n    numberCircle : {\r\n        borderRadius: '50%',\r\n        width: '10px',\r\n        height: '10px',\r\n        padding: '8px',\r\n        paddingBottom: '10px',\r\n        lineHeight: '12px',\r\n        background: '#fff',\r\n        border: '1px solid #666',\r\n        color: '#666',\r\n        textAlign: 'center',\r\n        fontSize: '15px',\r\n    },\r\n}));\r\nfunction makeid(length) {\r\n    var result           = '';\r\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    var charactersLength = characters.length;\r\n    for ( var i = 0; i < length; i++ ) {\r\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n   }\r\n   return result;\r\n}\r\n\r\nfunction CreateQuiz(props) {\r\n\r\n    const classes = useStyles();\r\n    const [thumbnail, setThumbnail]= useState('default/workshop.jpg');\r\n    const baseURL = process.env.REACT_APP_BASE_BACKEND_URL;\r\n    const handleOnChange= (e) => {\r\n        const thumbnailImg = e.target?.files?.[0];\r\n        \r\n        const metadata = {\r\n            contentType: 'image/*',\r\n        };\r\n        var id= `${makeid(7)}/${thumbnailImg.name}`;\r\n        const fileRef= ref(storage, `quiz-room/${id}`);\r\n        uploadBytes(fileRef, thumbnailImg, metadata).then(async()=> {\r\n            console.log(\"uploaded!!\");\r\n        });\r\n        setThumbnail(id);\r\n    };\r\n    const [listeningmp3file, setListeningmp3file] =useState('');\r\n    const handleOnChangeMp3= (e)=> {\r\n        const mp3File = e.target?.files?.[0];\r\n        \r\n        const metadata = {\r\n            contentType: 'audio/*',\r\n        };\r\n        var id= `${makeid(7)}/${mp3File.name}`;\r\n        const fileRef= ref(storage, `quiz-room-mp3/${id}`);\r\n        uploadBytes(fileRef, mp3File, metadata).then(async()=> {\r\n            console.log(\"uploaded!!\");\r\n        });\r\n        setListeningmp3file(id);\r\n\r\n    }\r\n    \r\n    const [activeStep, setActiveStep] = React.useState(0);\r\n    const  getSteps= ()=> {\r\n        return ['퀴즈 방 생성하기', '문제 만들기'];\r\n    };\r\n    const [roomTitleValue, setRoomTitleValue] = useState('');\r\n    const [roomDescValue, setRoomDescInputValue]= useState('');\r\n    const [limitTimeValue, setLimitTimeValue]= useState('');\r\n    const roomTitleInputChange = (e)=> {\r\n        setRoomTitleValue(e.target.value);\r\n    }\r\n    const roomDescInputChange= (e) => {\r\n        setRoomDescInputValue(e.target.value); \r\n    };\r\n    const limitTimeChange= (e) => {\r\n        setLimitTimeValue(e.target.value);\r\n    };\r\n    const [typeAndNumQuestion, setTypeAndNumQuestion]= useState([{\"type\":'', 'num': ''}]);\r\n\r\n    const handleChangeType= (e, index)=> {\r\n        const q = [...typeAndNumQuestion];\r\n        q[index][\"type\"] = e.target.value;\r\n        setTypeAndNumQuestion(q);\r\n    }\r\n    const handleChangeNumVal= (e, index)=> {\r\n        const q = [...typeAndNumQuestion];\r\n        q[index][\"num\"]= e.target.value;\r\n        setTypeAndNumQuestion(q);\r\n    }\r\n    const addTypeAndNum= ()=>{\r\n        const q = [...typeAndNumQuestion, {\"type\":'', 'num': ''}];\r\n        setTypeAndNumQuestion(q);\r\n    };\r\n    const check= ()=> {\r\n        if(!parseInt(limitTimeValue)) {\r\n            return false;\r\n        }\r\n        for(var i=0;i<typeAndNumQuestion.length;i++) {\r\n            if(!parseInt(typeAndNumQuestion[i].num) || parseInt(typeAndNumQuestion[i].num)>10) {\r\n                return false;\r\n            }\r\n            if(typeAndNumQuestion[i].type== '' || typeAndNumQuestion[i].num=='') {\r\n                return false;\r\n            }\r\n        }\r\n        if(roomTitleValue == '' || roomDescValue=='' || limitTimeValue=='') {\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    const [selectedIndex, setSelectedIndex] =useState(0);\r\n    const selectQuestionTypeNum= (index)=> {\r\n        setSelectedIndex(index);\r\n        setQuestionLabel([]);\r\n        setMultipleQuesNum([]);\r\n        setMultipleQuesChoice({});\r\n        setMultipleQuesChoiceCheck({});\r\n    };\r\n    const [questionLabel, setQuestionLabel]= useState([]);\r\n    const handleChangeQuestionLabel= (e, i) => {\r\n        if(questionLabel.length ==0) {\r\n            let n = typeAndNumQuestion[selectedIndex].num;\r\n            const x = Array.from({length: n}).map(el => \"\");\r\n            x.splice(i, 1, e.target.value);\r\n            setQuestionLabel(x);\r\n        }\r\n        else {\r\n            const x= [...questionLabel];\r\n            x.splice(i, 1, e.target.value);\r\n            setQuestionLabel(x);\r\n        }\r\n    };\r\n    const [typeBigQuestion, setTypeBigQuestion]= useState([]);\r\n    const [typeBigBodyQuestion, setTypeBigBodyQuestion]= useState([]);\r\n    const [multipleQuesNum, setMultipleQuesNum]= useState([]); //각각의 문제 번호에 대한 객관식 경우의 선택지 개수를 담는다.\r\n    const [multipleQuesChoice, setMultipleQuesChoice]= useState({}); //각각의 문제 번호에 대한 객관식 경우의 선택지 txt를 담는다.\r\n    const [multipleQuesChoiceCheck, setMultipleQuesChoiceCheck]= useState({}); //각각의 문제 번호에 대한 객관식 경우의 선택지 txt를 담는다.\r\n    // {\"세부문제번호\": {\"선택지 번호\": {\"체크여부\":false,  텍스트\":\"\"}}}\r\n    // {\"세부문제번호\": {\"선택지 번호\": false}} multipleQuesChoiceCheck\r\n    // {\"세부문제번호\": {\"선택지 번호\": \"...\"}} multipleQuesChoice\r\n    const handleChangeMultipleChoiceNum= (e, i)=> {\r\n        if(multipleQuesNum.length ==0) {\r\n            let n = typeAndNumQuestion[selectedIndex].num;\r\n            const x = Array.from({length: n}).map(el => \"\");\r\n            x.splice(i, 1, e.target.value);\r\n            setMultipleQuesNum(x);\r\n        }\r\n        else {\r\n            const x= [...multipleQuesNum];\r\n            x.splice(i, 1, e.target.value);\r\n            setMultipleQuesNum(x);\r\n        }\r\n        var xx= {...multipleQuesChoiceCheck};\r\n        if(xx[i] != undefined) {\r\n            var l= Object.keys(xx[i]).length; //3(0, 1, 2) //5(0, 1, 2 ,3, 4)\r\n            let v= e.target.value; //5 //3\r\n            var inc= v-l;\r\n            if(inc>0) {\r\n                for(var k= l;k<v;k++) {\r\n                    xx[i][k]= false;\r\n                }\r\n                console.log(xx[i]);\r\n            }else if(inc<0){\r\n                for(var k=l-1;k>=v;k--) {\r\n                    if(xx[i]!= undefined) {\r\n                        delete xx[i][k];\r\n                    }\r\n                }\r\n                console.log(xx[i]);\r\n            }\r\n        }else if(xx[i]== undefined) { //xx[i]가 undefined 된 경우에서..\r\n            for(var j=0;j<e.target.value;j++) {\r\n                xx[i]= {}\r\n                xx[i][j]= false;\r\n            }\r\n        }\r\n        var yy= {...multipleQuesChoice};\r\n        if(yy[i] !== undefined) {\r\n            var l= Object.keys(yy[i]).length; //3\r\n            let v= e.target.value; //5\r\n            var inc= v-l;\r\n            if(inc>0) {\r\n                for(var k= l;k<v;k++) {\r\n                    yy[i][k]= '';\r\n                }\r\n                console.log(yy[i]);\r\n            }else if(inc<0){\r\n                for(var k=l-1;k>=v;k--) {\r\n                    if(yy[i]!= undefined) {\r\n                        delete yy[i][k];\r\n                    }\r\n                }\r\n                console.log(yy[i]);\r\n            }\r\n        }else if(yy[i]== undefined) { //yy[i]가 undefined 된 경우에서..\r\n            for(var j=0;j<e.target.value;j++) {\r\n                yy[i]= {}\r\n                yy[i][j]= '';\r\n            }\r\n        }\r\n    };\r\n    const handleChangeMultipleQuesChoiceChecks= (i, num, index, b)=> {\r\n        var x= {};\r\n        var x= {...multipleQuesChoiceCheck};\r\n        if(x[i] != undefined) {\r\n            x[i][index]= b;\r\n            setMultipleQuesChoiceCheck(x);\r\n\r\n        }else{\r\n            x[i]= {};\r\n            for(var j=0;j<num;j++) {\r\n                if(j== index) {\r\n                    x[i][index]= b;\r\n                }else{\r\n                    x[i][j]= false;\r\n                }\r\n            }\r\n            setMultipleQuesChoiceCheck(x);\r\n        }\r\n        console.log(x);\r\n    };\r\n    const handleChangeMultipleQuesChoice= (e, i, num, index)=> { // i는 문제 세부 번호. index는 선택지 문제 번호. num은 객관식 문제 개수.\r\n        var x= {...multipleQuesChoice};\r\n        if(x[i] != undefined) {\r\n            x[i][index]= e.target.value;\r\n            setMultipleQuesChoice(x);\r\n\r\n        }else{\r\n            x[i]= {};\r\n            for(var j=0;j<num;j++) {\r\n                if(j== index) {\r\n                    x[i][index]= e.target.value;\r\n                }else{\r\n                    x[i][j]= '';\r\n                }\r\n            }\r\n            setMultipleQuesChoice(x);\r\n        }\r\n        console.log(x);\r\n\r\n    };\r\n    const [multipleQuesTxt, setMultipleQuesTxt] = useState([]);\r\n    const handleChangeMultipleQuestion=(e, i)=> {\r\n        if(multipleQuesTxt.length ==0) {\r\n            let n = typeAndNumQuestion[selectedIndex].num;\r\n            const x = Array.from({length: n}).map(el => \"\");\r\n            x.splice(i, 1, e.target.value);\r\n            setMultipleQuesTxt(x);\r\n        }\r\n        else {\r\n            const x= [...multipleQuesTxt];\r\n            x.splice(i, 1, e.target.value);\r\n            setMultipleQuesTxt(x);\r\n        }\r\n    };\r\n    const getMultipleQuesSheet= (num, i) => {\r\n\r\n        let n = num; // 세부 객관식 문제 개수만큼 루프를 돌리도록.\r\n        const x = Array.from({length: n}).map(el => \"\");\r\n        if(x!= undefined && n!= undefined) {\r\n            return (\r\n                <div style= {{display: 'flex', flexDirection: 'column'}}>\r\n                    <Typography component=\"h6\" style={{ fontFamily: 'CookieRun-Regular', fontSize: '15px', marginTop: '20px', marginLeft: '20px' }}>정답번호를 반드시 클릭하세요.</Typography>\r\n                    <TextField \r\n                        multiline={true}\r\n                        rows={3}\r\n                        style={{ width: \"700px\", marginLeft: '10px', marginTop: '20px'}}\r\n                        onChange={(e)=> handleChangeMultipleQuestion(e, i)}\r\n                        InputLabelProps={{\r\n                            style: { color: '#fff', fontStyle: \"bold\", height: '100%'}, \r\n                        }} \r\n                        inputProps={{\r\n                            style: {\r\n                                fontFamily: 'CookieRun-Regular',\r\n                            },\r\n                        }}\r\n                        placeholder=\"세부 질문 문제를 입력하세요.\"\r\n                    ></TextField>\r\n                    { x.map((_, index)=> {\r\n                            return (\r\n                                <>\r\n                                    <div style= {{display: 'flex', flexDirection: 'row', marginTop: \"30px\"}}>\r\n                                    {Object.keys(multipleQuesChoiceCheck).length> 0 && multipleQuesChoiceCheck[i]!= undefined && multipleQuesChoiceCheck[i][index]!= undefined &&multipleQuesChoiceCheck[i][index]? \r\n                                        <div style={{color: 'green', borderRadius: '50%', width: '10px',height: '10px', padding: '8px 8px 10px', lineHeight: '12px', background: 'rgb(255, 255, 255', border: '1px solid green', textAlign: 'center', fontSize: '15px'}} onClick={()=>handleChangeMultipleQuesChoiceChecks(i, n, index ,false)}>{index+1}</div>:\r\n                                        <div style={{color: 'blue', borderRadius: '50%', width: '10px',height: '10px', padding: '8px 8px 10px', lineHeight: '12px', background: 'rgb(255, 255, 255', border: '1px solid blue', textAlign: 'center', fontSize: '15px'}} onClick={()=>handleChangeMultipleQuesChoiceChecks(i, n, index, true)}>{index+1}</div>\r\n                                        }\r\n                                        <TextField \r\n                                            style={{height: \"35px\", width: \"800px\", marginLeft: '10px'}}\r\n                                            onChange={(e)=> handleChangeMultipleQuesChoice(e, i, n, index)}\r\n                                            InputLabelProps={{\r\n                                                style: { color: '#fff', fontStyle: \"bold\" , fontFmaily: 'CookieRun-Regular'}, \r\n                                                }}\r\n                                            >\r\n                                        </TextField>\r\n                                    </div>\r\n                                </>\r\n                            );\r\n                        })\r\n                    }\r\n                </div>\r\n            );\r\n            \r\n\r\n        }\r\n    };\r\n    const [narrativeQuestionTxt, setNarrativeQuestionTxt]= useState([]);\r\n    const [narrativeQuestionAnswer, setNarrativeQuestionAnswer]= useState([]);\r\n    const [narrativeQuestionBestAnswer, setNarrativeQuestionBestAnswer]= useState([]);\r\n    const handleChangeNarrQuestionAnswer=(e, i)=> {\r\n        if(narrativeQuestionAnswer.length ==0) {\r\n            let n = typeAndNumQuestion[selectedIndex].num;\r\n            const x = Array.from({length: n}).map(el => \"\");\r\n            x.splice(i, 1, e.target.value);\r\n            setNarrativeQuestionAnswer(x);\r\n        }\r\n        else {\r\n            const x= [...narrativeQuestionAnswer];\r\n            x.splice(i, 1, e.target.value);\r\n            setNarrativeQuestionAnswer(x);\r\n        }\r\n\r\n    };\r\n    const handleChangeNarrQuestionBestAnswer=(e, i)=> {\r\n        if(narrativeQuestionBestAnswer.length ==0) {\r\n            let n = typeAndNumQuestion[selectedIndex].num;\r\n            const x = Array.from({length: n}).map(el => \"\");\r\n            x.splice(i, 1, e.target.value);\r\n            setNarrativeQuestionBestAnswer(x);\r\n        }\r\n        else {\r\n            const x= [...narrativeQuestionBestAnswer];\r\n            x.splice(i, 1, e.target.value);\r\n            setNarrativeQuestionBestAnswer(x);\r\n        }\r\n\r\n    };\r\n    const handleChangeNarrQuestion=(e, i)=> {\r\n        if(narrativeQuestionTxt.length ==0) {\r\n            let n = typeAndNumQuestion[selectedIndex].num;\r\n            const x = Array.from({length: n}).map(el => \"\");\r\n            x.splice(i, 1, e.target.value);\r\n            setNarrativeQuestionTxt(x);\r\n        }\r\n        else {\r\n            const x= [...narrativeQuestionTxt];\r\n            x.splice(i, 1, e.target.value);\r\n            setNarrativeQuestionTxt(x);\r\n        }\r\n    };\r\n    const [shortQuestionTxt, setShortQuestionTxt]= useState([]);\r\n    const [shortQuestionAnswer, setShortQuestionAnswer]= useState([]);\r\n    const handleChangeShortQuestionAnswer =(e,i)=> {\r\n        if(shortQuestionAnswer.length ==0) {\r\n            let n = typeAndNumQuestion[selectedIndex].num;\r\n            const x = Array.from({length: n}).map(el => \"\");\r\n            x.splice(i, 1, e.target.value);\r\n            setShortQuestionAnswer(x);\r\n        }\r\n        else {\r\n            const x= [...shortQuestionAnswer];\r\n            x.splice(i, 1, e.target.value);\r\n            setShortQuestionAnswer(x);\r\n        }\r\n\r\n    };\r\n    const handleChangeShortQuestion= (e,i)=> {\r\n        if(shortQuestionTxt.length ==0) {\r\n            let n = typeAndNumQuestion[selectedIndex].num;\r\n            const x = Array.from({length: n}).map(el => \"\");\r\n            x.splice(i, 1, e.target.value);\r\n            setShortQuestionTxt(x);\r\n        }\r\n        else {\r\n            const x= [...shortQuestionTxt];\r\n            x.splice(i, 1, e.target.value);\r\n            setShortQuestionTxt(x);\r\n        }\r\n\r\n    };\r\n    const handleGoOut=()=> {\r\n        postToServer();\r\n        window.location.href=\"/quiz/make-quiz\";\r\n    };\r\n    const postToServer =() => {\r\n        var y= {};\r\n        y[\"유형번호\"] =selectedIndex+1;\r\n        y[\"thumbnail\"]= thumbnail;\r\n        y[\"type\"]= typeAndNumQuestion[selectedIndex].type;\r\n        y[\"문제개수\"]= typeAndNumQuestion[selectedIndex].num;\r\n        y[\"질문\"] =typeBigQuestion[selectedIndex];\r\n        y[\"본문텍스트\"]= typeBigBodyQuestion[selectedIndex];\r\n        y[\"세부문제정보\"]= {} // {0: {}, 1: {}, ...} 유형별 세부 문제 정보.\r\n        if(typeAndNumQuestion[selectedIndex].type== \"리스닝\") {\r\n            y[\"리스닝파일\"]= listeningmp3file;\r\n        }\r\n        for(var index=0; index<typeAndNumQuestion[selectedIndex].num; index++) {\r\n            y[\"세부문제정보\"][index+1]= {}\r\n            y[\"세부문제정보\"][index+1][\"문제번호\"]= index+1;\r\n            y[\"세부문제정보\"][index+1][\"label\"]= questionLabel[index];\r\n\r\n            if(questionLabel[index]==\"객관식\") {\r\n                y[\"세부문제정보\"][index+1][\"세부문제\"]= multipleQuesTxt[index];\r\n                y[\"세부문제정보\"][index+1][\"선택지개수\"] =multipleQuesNum[index];\r\n                y[\"세부문제정보\"][index+1][\"정답번호\"]= multipleQuesChoiceCheck[index];\r\n                y[\"세부문제정보\"][index+1][\"선택지\"] =multipleQuesChoice[index];\r\n                console.log(multipleQuesChoice);\r\n            }\r\n            else if(questionLabel[index]==\"서술형\") {\r\n                y[\"세부문제정보\"][index+1][\"세부문제\"] =narrativeQuestionTxt[index];\r\n                y[\"세부문제정보\"][index+1][\"키워드\"] =narrativeQuestionAnswer[index];\r\n                y[\"세부문제정보\"][index+1][\"모범답\"] =narrativeQuestionBestAnswer[index];\r\n                console.log(narrativeQuestionTxt);\r\n            }\r\n            else if(questionLabel[index]==\"단답형\") {\r\n                y[\"세부문제정보\"][index+1][\"세부문제\"]= shortQuestionTxt[index];\r\n                y[\"세부문제정보\"][index+1][\"키워드단어답\"]= shortQuestionAnswer[index];\r\n                console.log(shortQuestionTxt);\r\n            }\r\n        }\r\n        console.log(y);\r\n        \r\n        axios\r\n            .post(baseURL+\"quiz/create-quiz/\", {\r\n                json: y,\r\n                room_title: roomTitleValue,\r\n                room_desc: roomDescValue,\r\n                limit_time: limitTimeValue,\r\n                type_num_ques: typeAndNumQuestion\r\n            },\r\n            {\r\n            headers: {\r\n            Authorization: localStorage.getItem('token')\r\n                ? 'Token ' + localStorage.getItem('token')\r\n                : null,\r\n            'Content-Type': 'application/json',\r\n            accept: 'application/json',\r\n            }\r\n            })\r\n            .catch(function (error) {\r\n            if (error.response) {\r\n                console.log(error.response.data);\r\n                console.log(error.response.status);\r\n                console.log(error.response.headers);\r\n            }\r\n            })\r\n            .then(function (res) {  \r\n                console.log(res);\r\n            });\r\n\r\n    }\r\n    const handleNext= ()=> {\r\n        postToServer();\r\n        \r\n        let n = typeAndNumQuestion[selectedIndex+1].num;\r\n        const x = Array.from({length: n}).map(el => \"\");\r\n        setQuestionLabel(x);\r\n        \r\n        setMultipleQuesNum([]);\r\n        setMultipleQuesChoice({});\r\n        setMultipleQuesChoiceCheck({});\r\n\r\n        setSelectedIndex(selectedIndex+1);\r\n    };\r\n    const getQuizFormSheet= (n)=> {\r\n\r\n        //const n = typeAndNumQuestion[selectedIndex].num; // 세부 문제 개수만큼 루프를 돌리도록.\r\n        const x = Array.from({length: n}).map(el => \"\");\r\n        \r\n        return (\r\n            <div style={{display: 'flex', flexDirection: 'column'}}>\r\n                {x.map((_, index) => {\r\n                    return (\r\n                        <div style={{position: 'relative', marginTop: '20px'}}>\r\n                            <Grid item xs={12}>\r\n                                <div style= {{display: 'flex', flexDirection: 'row', marginTop: \"0\"}}>\r\n                                    <Typography component=\"h6\" style={{fontFamily:'CookieRun-Regular', color: '#EC407A', fontWeight: 'bold'}}>\r\n                                        {index+1}번.\r\n                                    </Typography>\r\n                                    <FormControl className={classes.formControl} style={{marginLeft: '30px', marginTop: '-3px'}}>\r\n                                        <Select\r\n                                            native\r\n                                            displayEmpty\r\n                                            value={questionLabel[index]}\r\n                                            onChange={(e)=>handleChangeQuestionLabel(e, index)}\r\n                                            input={<Input className={classes.changeFontFamilyClasses}/>}\r\n                                        >\r\n                                        <option value=\"\"></option>\r\n                                        <option value=\"객관식\" className={classes.changeFontFamilyClasses}>객관식</option>\r\n                                        <option value=\"단답형\" className={classes.changeFontFamilyClasses}>단답형</option>\r\n                                        <option value=\"서술형\" className={classes.changeFontFamilyClasses}>서술형</option>\r\n                                        </Select>\r\n                                    </FormControl>  \r\n                                    \r\n                                    {multipleQuesNum!= undefined && questionLabel[index]== \"객관식\" && \r\n                                        <FormControl className={classes.formControl} style={{marginLeft: '30px', marginTop: '-3px'}}>\r\n                                            <Select\r\n                                                native\r\n                                                value={multipleQuesNum[index]}\r\n                                                onChange={(e)=>handleChangeMultipleChoiceNum(e, index)}\r\n                                                input={<Input className={classes.changeFontFamilyClasses}/>}\r\n                                            >\r\n                                            <option value=\"\"></option>\r\n                                            <option value=\"1\" className={classes.changeFontFamilyClasses}>1</option>\r\n                                            <option value=\"2\" className={classes.changeFontFamilyClasses}>2</option>\r\n                                            <option value=\"3\" className={classes.changeFontFamilyClasses}>3</option>\r\n                                            <option value=\"4\" className={classes.changeFontFamilyClasses}>4</option>\r\n                                            <option value=\"5\" className={classes.changeFontFamilyClasses}>5</option>\r\n                                            </Select>\r\n                                        </FormControl> \r\n                                    }\r\n                                </div>   \r\n                            </Grid> \r\n                            <Grid item xs={12}>\r\n                                {multipleQuesNum!= undefined && questionLabel[index]== \"객관식\" && getMultipleQuesSheet(multipleQuesNum[index], index)}\r\n                                \r\n                                {questionLabel[index]== \"단답형\" && \r\n                                    <>\r\n                                    <TextField \r\n                                        multiline={true}\r\n                                        rows={3}\r\n                                        style={{ width: \"700px\", marginLeft: '10px', marginTop: '20px'}}\r\n                                        onChange={(e)=> handleChangeShortQuestion(e, index)}\r\n                                        InputLabelProps={{\r\n                                            style: { color: '#fff', fontStyle: \"bold\", height: '100%'}, \r\n                                        }} \r\n                                        inputProps={{\r\n                                            style: {\r\n                                                fontFamily: 'CookieRun-Regular',\r\n                                            },\r\n                                        }}\r\n                                        placeholder=\"세부 질문 문제를 입력하세요.\"\r\n                                        >\r\n                                    </TextField>\r\n                                    <TextField \r\n                                        rows={1}\r\n                                        style={{ width: \"300px\", marginLeft: '10px', marginTop: '20px'}}\r\n                                        onChange={(e)=> handleChangeShortQuestionAnswer(e, index)}\r\n                                        InputLabelProps={{\r\n                                            style: { color: '#fff', fontStyle: \"bold\", height: '100%'}, \r\n                                        }} \r\n                                        inputProps={{\r\n                                            style: {\r\n                                                fontFamily: 'CookieRun-Regular',\r\n                                            },\r\n                                        }}\r\n                                        placeholder=\"답-키워드 단어 한개를 입력하세요.\"\r\n                                        >\r\n                                    </TextField></>\r\n                                }\r\n                                {questionLabel[index]== \"서술형\" && \r\n                                    <>\r\n                                    <TextField \r\n                                        multiline={true}\r\n                                        rows={3}\r\n                                        style={{ width: \"700px\", marginLeft: '10px', marginTop: '20px'}}\r\n                                        onChange={(e)=> handleChangeNarrQuestion(e, index)}\r\n                                        InputLabelProps={{\r\n                                            style: { color: '#fff', fontStyle: \"bold\", height: '100%'}, \r\n                                        }} \r\n                                        inputProps={{\r\n                                            style: {\r\n                                                fontFamily: 'CookieRun-Regular',\r\n                                            },\r\n                                        }}\r\n                                        placeholder=\"세부 질문 문제를 입력하세요.\"\r\n                                        >\r\n                                    </TextField>\r\n                                    <TextField \r\n                                        rows={1}\r\n                                        style={{ width: \"700px\", marginLeft: '10px', marginTop: '20px'}}\r\n                                        onChange={(e)=> handleChangeNarrQuestionAnswer(e, index)}\r\n                                        InputLabelProps={{\r\n                                            style: { color: '#fff', fontStyle: \"bold\", height: '100%'}, \r\n                                        }} \r\n                                        inputProps={{\r\n                                            style: {\r\n                                                fontFamily: 'CookieRun-Regular',\r\n                                            },\r\n                                        }}\r\n                                        placeholder=\"세부 질문 키워드 답을 반점으로 구분지어 입력하세요.\"\r\n                                        >\r\n                                    </TextField>\r\n                                    <TextField \r\n                                        multiline={true}\r\n                                        rows={3}\r\n                                        style={{ width: \"700px\", marginLeft: '10px', marginTop: '20px'}}\r\n                                        onChange={(e)=> handleChangeNarrQuestionBestAnswer(e, index)}\r\n                                        InputLabelProps={{\r\n                                            style: { color: '#fff', fontStyle: \"bold\", height: '100%'}, \r\n                                        }} \r\n                                        inputProps={{\r\n                                            style: {\r\n                                                fontFamily: 'CookieRun-Regular',\r\n                                            },\r\n                                        }}\r\n                                        placeholder=\"서술형 모범 답을 입력하세요.\"\r\n                                        >\r\n                                    </TextField></>\r\n                                }\r\n                            </Grid>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        );\r\n    };\r\n    const handleChangeTypeQuestion= (e,i)=> {\r\n        if(typeBigQuestion.length ==0) {\r\n            let n = typeAndNumQuestion.length;\r\n            const x = Array.from({length: n}).map(el => \"\");\r\n            x.splice(i, 1, e.target.value);\r\n            setTypeBigQuestion(x);\r\n        }\r\n        else {\r\n            const x= [...typeBigQuestion];\r\n            x.splice(i, 1, e.target.value);\r\n            setTypeBigQuestion(x);\r\n        }\r\n\r\n    };\r\n    const handleChangeTypeBodyQuestion= (e,i)=> {\r\n        if(typeBigBodyQuestion.length ==0) {\r\n            let n = typeAndNumQuestion.length;\r\n            const x = Array.from({length: n}).map(el => \"\");\r\n            x.splice(i, 1, e.target.value);\r\n            setTypeBigBodyQuestion(x);\r\n        }\r\n        else {\r\n            const x= [...typeBigBodyQuestion];\r\n            x.splice(i, 1, e.target.value);\r\n            setTypeBigBodyQuestion(x);\r\n        }\r\n\r\n    };\r\n    const getStepContent = (step) => {\r\n        switch (step) {\r\n          case 0:\r\n            return (\r\n                <Grid\r\n                container\r\n                alignItems=\"flex-start\"\r\n                justify=\"space-around\"\r\n                direction=\"row\"\r\n                spacing={3}\r\n                > \r\n                    <Grid item xs={12}>\r\n                        <div className=\"basic-form form_file_input\">\r\n                            <form action=\"#\">\r\n                                <div className=\"input-group\">\r\n                                    <div className=\"from-file\">\r\n                                        <input id=\"b1\" type=\"file\" className=\"form-file-input form-control\"  onChange={(e)=> handleOnChange(e)}/>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </Grid>                    \r\n                    <Grid item xs={12}>\r\n                        <div style= {{display: 'flex', flexDirection: 'row', marginTop: \"0\"}}>\r\n                            <Typography component=\"h6\" style={{fontFamily:'CookieRun-Regular'}}>\r\n                                QuizRoom Title  \r\n                            </Typography>\r\n                            <Input\r\n                                placeholder=\"퀴즈 방 이름\"\r\n                                inputProps={{\r\n                                    'aria-label': 'Description',\r\n                                }}\r\n                                style={{margin: \"20px\", marginTop: \"-6px\", width: \"500px\"}}\r\n                                value={roomTitleValue}\r\n                                onChange={roomTitleInputChange}\r\n                            />\r\n                        </div>\r\n                    </Grid>      \r\n                    <Grid item xs={12}>\r\n                        <div style= {{display: 'flex', flexDirection: 'row', marginTop: \"-30px\"}}>\r\n                            <Typography component=\"h6\" style={{fontFamily:'CookieRun-Regular'}}>\r\n                                QuizRoom Description  \r\n                            </Typography>\r\n                            <Input\r\n                                placeholder=\"퀴즈 방 관하여\"\r\n                                inputProps={{\r\n                                    'aria-label': 'Description',\r\n                                }}\r\n                                style={{margin: \"20px\", marginTop: \"-6px\", width: \"450px\"}}\r\n                                value={roomDescValue}\r\n                                onChange={roomDescInputChange}\r\n                            />\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <div style= {{display: 'flex', flexDirection: 'row', marginTop: \"-30px\"}}>\r\n                            <Typography component=\"h6\" style={{fontFamily:'CookieRun-Regular'}}>\r\n                               제한시간 \r\n                            </Typography>\r\n                            <Input\r\n                                placeholder=\"분단위\"\r\n                                inputProps={{\r\n                                    'aria-label': 'Description',\r\n                                }}\r\n                                style={{margin: \"20px\", marginTop: \"-6px\", width: \"100px\"}}\r\n                                value={limitTimeValue}\r\n                                onChange={limitTimeChange}\r\n                            />\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Typography component=\"p\" style={{fontFamily:'CookieRun-Regular'}}>\r\n                            유형별 10문제 초과해서는 안됩니다.\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <div style= {{display: 'flex', flexDirection: 'column', marginTop: \"0px\"}}>\r\n                            {typeAndNumQuestion.map((val, index) =>{\r\n                                return (\r\n                                    <div style= {{display: 'flex', flexDirection: 'row', marginTop: \"10px\"}}>\r\n                                    <Typography component=\"h6\" style={{fontFamily:'CookieRun-Regular'}}>\r\n                                        유형 &nbsp;\r\n                                    </Typography>\r\n                                    <FormControl className={classes.formControl}>\r\n                                        <Select\r\n                                            native\r\n                                            value={val.type}\r\n                                            onChange={(e)=>handleChangeType(e, index)}\r\n                                            input={<Input className={classes.changeFontFamilyClasses}/>}\r\n                                        >\r\n                                        <option value=\"\"></option>\r\n                                        <option value=\"리딩\" className={classes.changeFontFamilyClasses}>리딩</option>\r\n                                        <option value=\"리스닝\" className={classes.changeFontFamilyClasses}>리스닝</option>\r\n                                        </Select>\r\n                                    </FormControl>          \r\n                                    <Input\r\n                                        placeholder=\"x\"\r\n                                        inputProps={{\r\n                                            'aria-label': 'Description',\r\n                                        }}\r\n                                        style={{margin: \"20px\", marginTop: \"-6px\", width: \"60px\"}}\r\n                                        value={val.num}\r\n                                        onChange={(e)=> handleChangeNumVal(e, index)}\r\n                                    />                      \r\n                                    <Typography component=\"h6\" style={{fontFamily:'CookieRun-Regular'}}>개</Typography>\r\n                                    {index==0 && <Button className={classes.addButton} style={{marginTop: '-5px', marginLeft: '30px', height: '36px'}} onClick={addTypeAndNum}>추가</Button>}\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n            );\r\n          case 1:\r\n            return(\r\n                <div>\r\n                    {check() ?\r\n                        \r\n                        <Grid\r\n                            container\r\n                            alignItems=\"flex-start\"\r\n                            justify=\"flex-start\"\r\n                            direction=\"row\"\r\n                            spacing={3}\r\n                            > \r\n                            {typeAndNumQuestion.map((val, index) =>{\r\n                                return (\r\n                                    <>\r\n                                    <Grid item xs={1} style={{maxWidth: '60px'}}>\r\n                                        <Box bgcolor=\"#EC407A\" width={40} height={40}>\r\n                                            <Button style={{marginLeft:'-10px'}} onClick={()=> selectQuestionTypeNum(index)}>{index+1}</Button>\r\n                                        </Box>\r\n                                    </Grid>\r\n                                    </>\r\n                                );\r\n                            })}\r\n                            <Grid item xs={12}>\r\n                            <Typography component=\"h6\" style={{fontFamily:'CookieRun-Regular', fontSize:'23px'}}>\r\n                                {selectedIndex+1} 번.&nbsp;&nbsp;{typeAndNumQuestion[selectedIndex][\"type\"]} 문제&nbsp;&nbsp;&nbsp;1번-{typeAndNumQuestion[selectedIndex][\"num\"]}번\r\n                            </Typography>\r\n                            </Grid>      \r\n                            <Grid item xs={12}>\r\n                                {typeAndNumQuestion[selectedIndex][\"type\"]== \"리스닝\" && \r\n                                    <div className=\"basic-form form_file_input\">\r\n                                        <form action=\"#\">\r\n                                            <div className=\"input-group\">\r\n                                                <div className=\"from-file\">\r\n                                                    <input id=\"b1\" type=\"file\" className=\"form-file-input form-control\"  onChange={(e)=> handleOnChangeMp3(e)}/>\r\n                                                </div>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                }\r\n                            </Grid>\r\n                            <Typography component=\"h6\" style={{ fontFamily: 'CookieRun-Regular', fontSize: '15px', marginLeft: '30px' }}>\r\n                                다음/완료를 누르면 해당 유형번호 퀴즈가 제출됩니다. 모든 필드를 채워넣어야 합니다.</Typography>\r\n                            <Grid item xs={12}>\r\n                                <TextField \r\n                                    style={{height: \"35px\", width: \"70%\", marginLeft: '10px', marginTop: '20px'}}\r\n                                    onChange={(e)=> handleChangeTypeQuestion(e, selectedIndex)}\r\n                                    InputLabelProps={{\r\n                                        style: { color: '#fff', fontStyle: \"bold\" , fontFmaily: 'CookieRun-Regular'}, \r\n                                    }}\r\n                                    inputProps={{\r\n                                        style: {\r\n                                            fontFamily: 'CookieRun-Regular',\r\n                                        },\r\n                                    }}\r\n                                    value={typeBigQuestion[selectedIndex]}\r\n                                    placeholder=\"해당 유형 문제 질문을 입력하세요.\"\r\n                                    >\r\n                                </TextField>\r\n                                <TextField \r\n                                    multiline={true}\r\n                                    rows={9}\r\n                                    style={{ width: \"70%\", marginLeft: '10px', marginTop: '20px'}}\r\n                                    onChange={(e)=> handleChangeTypeBodyQuestion(e, selectedIndex)}\r\n                                    InputLabelProps={{\r\n                                        style: { color: '#fff', fontStyle: \"bold\", height: '100%'}, \r\n                                    }} \r\n                                    inputProps={{\r\n                                        style: {\r\n                                            fontFamily: 'CookieRun-Regular',\r\n                                        },\r\n                                    }}\r\n                                    value={typeBigBodyQuestion[selectedIndex]}\r\n                                    placeholder=\"해당 유형 문제 본문 문제를 입력하세요.\"\r\n                                    >\r\n                                </TextField>\r\n                            </Grid>\r\n                            {typeAndNumQuestion.map((val, index) =>{\r\n                                return (\r\n                                    <>\r\n                                    {index==selectedIndex? \r\n                                        getQuizFormSheet(val[\"num\"])\r\n                                    :\r\n                                        <div style={{display:'none'}}>{getQuizFormSheet(val[\"num\"])}</div>\r\n                                    }\r\n                                    </>\r\n                                );\r\n                            })}\r\n                            {typeAndNumQuestion.length-1 != selectedIndex &&\r\n                                <Grid item xs={12}>\r\n                                    <Button className={classes.button} onClick={()=> handleNext()}>다음</Button>\r\n                                </Grid>\r\n                            }\r\n                            {typeAndNumQuestion.length-1== selectedIndex && <Grid item xs={12}>\r\n                                <Button className={classes.button} onClick={()=> handleGoOut()}>완료</Button>\r\n                            </Grid>}\r\n                        </Grid> :\r\n                        <Typography component=\"h6\" style={{fontFamily:'CookieRun-Regular'}}>퀴즈 양식을 잘못 제출하였습니다.\r\n                        </Typography>\r\n                    }\r\n                </div>\r\n            );\r\n          default:\r\n            return 'Unknown step';\r\n        }\r\n    };\r\n    const steps = getSteps();\r\n    const isStepOptional = (step) => step === 0;\r\n    const [isLoaded, setIsLoaded]= useState(false);\r\n    const handleClick = ()=> {\r\n\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    };\r\n    useEffect(() => {\r\n        var author= localStorage.getItem(\"user_name\");\r\n        if(author === null) {\r\n            window.location.href=\"/auth/email\";\r\n        }\r\n        if(localStorage.getItem(\"MyProfileOnce\")) {\r\n            localStorage.removeItem(\"MyProfileOnce\");\r\n        }\r\n        if(localStorage.getItem(\"ChatMessageOnce\")) {\r\n          localStorage.removeItem(\"ChatMessageOnce\");\r\n        } \r\n        setIsLoaded(true);\r\n    });\r\n    useEffect(() => {\r\n        if(isLoaded) {\r\n            \r\n        }\r\n    },[isLoaded]);\r\n    return (\r\n        <div className={classes.root}>\r\n        <PapperBlock title=\"퀴즈 출제방\" whiteBg icon=\"ion-ios-grid-outline\" desc=\"\r\n        퀴즈 출제방을 생성하여 퀴즈를 출제하여 보세요.\">\r\n        <Stepper activeStep={activeStep} orientation=\"vertical\">\r\n                {steps.map((label, index) => (\r\n                    <Step key={label}>\r\n                        <StepLabel>{label}</StepLabel>\r\n                        <StepContent>\r\n                        <Typography>\r\n                            <div style= {{display: 'flex', flexDirection: 'column', marginTop: \"30px\" , height: \"100%\"}}>\r\n                                {getStepContent(index)}  \r\n                                {isStepOptional(index) && \r\n                                    <Button\r\n                                    className={classes.button}\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    onClick={() =>handleClick()}\r\n                                    color=\"secondary\"\r\n                                    >\r\n                                        다음\r\n                                    </Button>\r\n                                }\r\n                            </div>\r\n                        </Typography>\r\n                        </StepContent>\r\n                    </Step>\r\n                ))}\r\n            </Stepper>\r\n        </PapperBlock>\r\n        </div>\r\n    );\r\n} \r\n\r\nexport default CreateQuiz;","// Import the functions you need from the SDKs you need\r\nimport { initializeApp, getApps, getApp } from \"firebase/app\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\nimport { getStorage } from 'firebase/storage';\r\nimport { getFirestore } from \"firebase/firestore\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDXlEPMQYhq7o6x21RwfPBQh3sHxo0p4dI\",\r\n  authDomain: \"english-website-362600.firebaseapp.com\",\r\n  projectId: \"english-website-362600\",\r\n  storageBucket: \"english-website-362600.appspot.com\",\r\n  messagingSenderId: \"790842426643\",\r\n  appId: \"1:790842426643:web:f45d23c026b573e55686e6\",\r\n  measurementId: \"G-LX8PL19HD7\"\r\n};\r\n\r\n// Initialize Firebase\r\n// const app = initializeApp(firebaseConfig);\r\n// const analytics = getAnalytics(app);\r\n\r\nconst app = !getApps().length ? initializeApp(firebaseConfig): getApp();\r\nconst analytics = getAnalytics(app);\r\nconst db= getFirestore();\r\nconst storage = getStorage();\r\nexport {app, db, storage};"],"names":["theme","root","mixins","gutters","paddingTop","spacing","paddingBottom","marginBottom","boxShadow","shade","light","color","palette","text","primary","margin","marginTop","descBlock","display","alignItems","breakpoints","down","titleText","flex","title","position","textTransform","fontSize","fontWeight","type","main","dark","textAlign","description","maxWidth","content","padding","borderRadius","rounded","medium","backgroundColor","background","default","up","whiteBg","noMargin","colorMode","grey","borderBottom","overflowX","width","iconTitle","small","border","lighten","height","lineHeight","verticalAlign","marginRight","common","white","PapperBlock","props","classes","desc","children","icon","Paper","className","classNames","elevation","Typography","variant","component","defaultProps","withStyles","styles","useStyles","makeStyles","button","fontFamily","addButton","formControl","select","changeFontFamilyClasses","numberCircle","makeid","length","result","characters","charactersLength","i","charAt","Math","floor","random","useState","thumbnail","setThumbnail","listeningmp3file","setListeningmp3file","React","activeStep","setActiveStep","roomTitleValue","setRoomTitleValue","roomDescValue","setRoomDescInputValue","limitTimeValue","setLimitTimeValue","roomTitleInputChange","e","target","value","roomDescInputChange","limitTimeChange","typeAndNumQuestion","setTypeAndNumQuestion","addTypeAndNum","q","check","parseInt","num","selectedIndex","setSelectedIndex","questionLabel","setQuestionLabel","typeBigQuestion","setTypeBigQuestion","typeBigBodyQuestion","setTypeBigBodyQuestion","multipleQuesNum","setMultipleQuesNum","multipleQuesChoice","setMultipleQuesChoice","multipleQuesChoiceCheck","setMultipleQuesChoiceCheck","handleChangeMultipleQuesChoiceChecks","index","b","x","undefined","j","console","log","multipleQuesTxt","setMultipleQuesTxt","getMultipleQuesSheet","n","Array","from","map","el","style","flexDirection","marginLeft","multiline","rows","onChange","splice","handleChangeMultipleQuestion","InputLabelProps","fontStyle","inputProps","placeholder","_","Object","keys","onClick","handleChangeMultipleQuesChoice","fontFmaily","narrativeQuestionTxt","setNarrativeQuestionTxt","narrativeQuestionAnswer","setNarrativeQuestionAnswer","narrativeQuestionBestAnswer","setNarrativeQuestionBestAnswer","shortQuestionTxt","setShortQuestionTxt","shortQuestionAnswer","setShortQuestionAnswer","postToServer","y","axios","baseURL","json","room_title","room_desc","limit_time","type_num_ques","headers","Authorization","localStorage","getItem","accept","catch","error","response","data","status","then","res","getQuizFormSheet","item","xs","native","displayEmpty","handleChangeQuestionLabel","input","xx","l","v","inc","k","yy","handleChangeMultipleChoiceNum","handleChangeShortQuestion","handleChangeShortQuestionAnswer","handleChangeNarrQuestion","handleChangeNarrQuestionAnswer","handleChangeNarrQuestionBestAnswer","getStepContent","step","container","justify","direction","action","id","thumbnailImg","files","name","fileRef","ref","storage","uploadBytes","contentType","handleOnChange","val","handleChangeType","handleChangeNumVal","bgcolor","selectQuestionTypeNum","mp3File","handleOnChangeMp3","handleChangeTypeQuestion","handleChangeTypeBodyQuestion","handleNext","window","location","href","steps","isLoaded","setIsLoaded","useEffect","removeItem","orientation","label","fullWidth","prevActiveStep","app","getApps","getApp","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getAnalytics","getFirestore","getStorage"],"sourceRoot":""}